<?php
/**
 * ContentRating
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * YouTube Data
 *
 * Supports core YouTube features, such as uploading videos, creating and managing playlists, searching for content, and much more.
 *
 * OpenAPI spec version: v3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ContentRating Class Doc Comment
 *
 * @category Class
 * @description Ratings schemes. The country-specific ratings are mostly for movies and shows. NEXT_ID: 71
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ContentRating implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ContentRating';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'acb_rating' => 'string',
        'agcom_rating' => 'string',
        'anatel_rating' => 'string',
        'bbfc_rating' => 'string',
        'bfvc_rating' => 'string',
        'bmukk_rating' => 'string',
        'catv_rating' => 'string',
        'catvfr_rating' => 'string',
        'cbfc_rating' => 'string',
        'ccc_rating' => 'string',
        'cce_rating' => 'string',
        'chfilm_rating' => 'string',
        'chvrs_rating' => 'string',
        'cicf_rating' => 'string',
        'cna_rating' => 'string',
        'cnc_rating' => 'string',
        'csa_rating' => 'string',
        'cscf_rating' => 'string',
        'czfilm_rating' => 'string',
        'djctq_rating' => 'string',
        'djctq_rating_reasons' => 'string[]',
        'ecbmct_rating' => 'string',
        'eefilm_rating' => 'string',
        'egfilm_rating' => 'string',
        'eirin_rating' => 'string',
        'fcbm_rating' => 'string',
        'fco_rating' => 'string',
        'fmoc_rating' => 'string',
        'fpb_rating' => 'string',
        'fpb_rating_reasons' => 'string[]',
        'fsk_rating' => 'string',
        'grfilm_rating' => 'string',
        'icaa_rating' => 'string',
        'ifco_rating' => 'string',
        'ilfilm_rating' => 'string',
        'incaa_rating' => 'string',
        'kfcb_rating' => 'string',
        'kijkwijzer_rating' => 'string',
        'kmrb_rating' => 'string',
        'lsf_rating' => 'string',
        'mccaa_rating' => 'string',
        'mccyp_rating' => 'string',
        'mcst_rating' => 'string',
        'mda_rating' => 'string',
        'medietilsynet_rating' => 'string',
        'meku_rating' => 'string',
        'mena_mpaa_rating' => 'string',
        'mibac_rating' => 'string',
        'moc_rating' => 'string',
        'moctw_rating' => 'string',
        'mpaa_rating' => 'string',
        'mpaat_rating' => 'string',
        'mtrcb_rating' => 'string',
        'nbc_rating' => 'string',
        'nbcpl_rating' => 'string',
        'nfrc_rating' => 'string',
        'nfvcb_rating' => 'string',
        'nkclv_rating' => 'string',
        'oflc_rating' => 'string',
        'pefilm_rating' => 'string',
        'rcnof_rating' => 'string',
        'resorteviolencia_rating' => 'string',
        'rtc_rating' => 'string',
        'rte_rating' => 'string',
        'russia_rating' => 'string',
        'skfilm_rating' => 'string',
        'smais_rating' => 'string',
        'smsa_rating' => 'string',
        'tvpg_rating' => 'string',
        'yt_rating' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'acb_rating' => null,
        'agcom_rating' => null,
        'anatel_rating' => null,
        'bbfc_rating' => null,
        'bfvc_rating' => null,
        'bmukk_rating' => null,
        'catv_rating' => null,
        'catvfr_rating' => null,
        'cbfc_rating' => null,
        'ccc_rating' => null,
        'cce_rating' => null,
        'chfilm_rating' => null,
        'chvrs_rating' => null,
        'cicf_rating' => null,
        'cna_rating' => null,
        'cnc_rating' => null,
        'csa_rating' => null,
        'cscf_rating' => null,
        'czfilm_rating' => null,
        'djctq_rating' => null,
        'djctq_rating_reasons' => null,
        'ecbmct_rating' => null,
        'eefilm_rating' => null,
        'egfilm_rating' => null,
        'eirin_rating' => null,
        'fcbm_rating' => null,
        'fco_rating' => null,
        'fmoc_rating' => null,
        'fpb_rating' => null,
        'fpb_rating_reasons' => null,
        'fsk_rating' => null,
        'grfilm_rating' => null,
        'icaa_rating' => null,
        'ifco_rating' => null,
        'ilfilm_rating' => null,
        'incaa_rating' => null,
        'kfcb_rating' => null,
        'kijkwijzer_rating' => null,
        'kmrb_rating' => null,
        'lsf_rating' => null,
        'mccaa_rating' => null,
        'mccyp_rating' => null,
        'mcst_rating' => null,
        'mda_rating' => null,
        'medietilsynet_rating' => null,
        'meku_rating' => null,
        'mena_mpaa_rating' => null,
        'mibac_rating' => null,
        'moc_rating' => null,
        'moctw_rating' => null,
        'mpaa_rating' => null,
        'mpaat_rating' => null,
        'mtrcb_rating' => null,
        'nbc_rating' => null,
        'nbcpl_rating' => null,
        'nfrc_rating' => null,
        'nfvcb_rating' => null,
        'nkclv_rating' => null,
        'oflc_rating' => null,
        'pefilm_rating' => null,
        'rcnof_rating' => null,
        'resorteviolencia_rating' => null,
        'rtc_rating' => null,
        'rte_rating' => null,
        'russia_rating' => null,
        'skfilm_rating' => null,
        'smais_rating' => null,
        'smsa_rating' => null,
        'tvpg_rating' => null,
        'yt_rating' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'acb_rating' => 'acbRating',
        'agcom_rating' => 'agcomRating',
        'anatel_rating' => 'anatelRating',
        'bbfc_rating' => 'bbfcRating',
        'bfvc_rating' => 'bfvcRating',
        'bmukk_rating' => 'bmukkRating',
        'catv_rating' => 'catvRating',
        'catvfr_rating' => 'catvfrRating',
        'cbfc_rating' => 'cbfcRating',
        'ccc_rating' => 'cccRating',
        'cce_rating' => 'cceRating',
        'chfilm_rating' => 'chfilmRating',
        'chvrs_rating' => 'chvrsRating',
        'cicf_rating' => 'cicfRating',
        'cna_rating' => 'cnaRating',
        'cnc_rating' => 'cncRating',
        'csa_rating' => 'csaRating',
        'cscf_rating' => 'cscfRating',
        'czfilm_rating' => 'czfilmRating',
        'djctq_rating' => 'djctqRating',
        'djctq_rating_reasons' => 'djctqRatingReasons',
        'ecbmct_rating' => 'ecbmctRating',
        'eefilm_rating' => 'eefilmRating',
        'egfilm_rating' => 'egfilmRating',
        'eirin_rating' => 'eirinRating',
        'fcbm_rating' => 'fcbmRating',
        'fco_rating' => 'fcoRating',
        'fmoc_rating' => 'fmocRating',
        'fpb_rating' => 'fpbRating',
        'fpb_rating_reasons' => 'fpbRatingReasons',
        'fsk_rating' => 'fskRating',
        'grfilm_rating' => 'grfilmRating',
        'icaa_rating' => 'icaaRating',
        'ifco_rating' => 'ifcoRating',
        'ilfilm_rating' => 'ilfilmRating',
        'incaa_rating' => 'incaaRating',
        'kfcb_rating' => 'kfcbRating',
        'kijkwijzer_rating' => 'kijkwijzerRating',
        'kmrb_rating' => 'kmrbRating',
        'lsf_rating' => 'lsfRating',
        'mccaa_rating' => 'mccaaRating',
        'mccyp_rating' => 'mccypRating',
        'mcst_rating' => 'mcstRating',
        'mda_rating' => 'mdaRating',
        'medietilsynet_rating' => 'medietilsynetRating',
        'meku_rating' => 'mekuRating',
        'mena_mpaa_rating' => 'menaMpaaRating',
        'mibac_rating' => 'mibacRating',
        'moc_rating' => 'mocRating',
        'moctw_rating' => 'moctwRating',
        'mpaa_rating' => 'mpaaRating',
        'mpaat_rating' => 'mpaatRating',
        'mtrcb_rating' => 'mtrcbRating',
        'nbc_rating' => 'nbcRating',
        'nbcpl_rating' => 'nbcplRating',
        'nfrc_rating' => 'nfrcRating',
        'nfvcb_rating' => 'nfvcbRating',
        'nkclv_rating' => 'nkclvRating',
        'oflc_rating' => 'oflcRating',
        'pefilm_rating' => 'pefilmRating',
        'rcnof_rating' => 'rcnofRating',
        'resorteviolencia_rating' => 'resorteviolenciaRating',
        'rtc_rating' => 'rtcRating',
        'rte_rating' => 'rteRating',
        'russia_rating' => 'russiaRating',
        'skfilm_rating' => 'skfilmRating',
        'smais_rating' => 'smaisRating',
        'smsa_rating' => 'smsaRating',
        'tvpg_rating' => 'tvpgRating',
        'yt_rating' => 'ytRating'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'acb_rating' => 'setAcbRating',
        'agcom_rating' => 'setAgcomRating',
        'anatel_rating' => 'setAnatelRating',
        'bbfc_rating' => 'setBbfcRating',
        'bfvc_rating' => 'setBfvcRating',
        'bmukk_rating' => 'setBmukkRating',
        'catv_rating' => 'setCatvRating',
        'catvfr_rating' => 'setCatvfrRating',
        'cbfc_rating' => 'setCbfcRating',
        'ccc_rating' => 'setCccRating',
        'cce_rating' => 'setCceRating',
        'chfilm_rating' => 'setChfilmRating',
        'chvrs_rating' => 'setChvrsRating',
        'cicf_rating' => 'setCicfRating',
        'cna_rating' => 'setCnaRating',
        'cnc_rating' => 'setCncRating',
        'csa_rating' => 'setCsaRating',
        'cscf_rating' => 'setCscfRating',
        'czfilm_rating' => 'setCzfilmRating',
        'djctq_rating' => 'setDjctqRating',
        'djctq_rating_reasons' => 'setDjctqRatingReasons',
        'ecbmct_rating' => 'setEcbmctRating',
        'eefilm_rating' => 'setEefilmRating',
        'egfilm_rating' => 'setEgfilmRating',
        'eirin_rating' => 'setEirinRating',
        'fcbm_rating' => 'setFcbmRating',
        'fco_rating' => 'setFcoRating',
        'fmoc_rating' => 'setFmocRating',
        'fpb_rating' => 'setFpbRating',
        'fpb_rating_reasons' => 'setFpbRatingReasons',
        'fsk_rating' => 'setFskRating',
        'grfilm_rating' => 'setGrfilmRating',
        'icaa_rating' => 'setIcaaRating',
        'ifco_rating' => 'setIfcoRating',
        'ilfilm_rating' => 'setIlfilmRating',
        'incaa_rating' => 'setIncaaRating',
        'kfcb_rating' => 'setKfcbRating',
        'kijkwijzer_rating' => 'setKijkwijzerRating',
        'kmrb_rating' => 'setKmrbRating',
        'lsf_rating' => 'setLsfRating',
        'mccaa_rating' => 'setMccaaRating',
        'mccyp_rating' => 'setMccypRating',
        'mcst_rating' => 'setMcstRating',
        'mda_rating' => 'setMdaRating',
        'medietilsynet_rating' => 'setMedietilsynetRating',
        'meku_rating' => 'setMekuRating',
        'mena_mpaa_rating' => 'setMenaMpaaRating',
        'mibac_rating' => 'setMibacRating',
        'moc_rating' => 'setMocRating',
        'moctw_rating' => 'setMoctwRating',
        'mpaa_rating' => 'setMpaaRating',
        'mpaat_rating' => 'setMpaatRating',
        'mtrcb_rating' => 'setMtrcbRating',
        'nbc_rating' => 'setNbcRating',
        'nbcpl_rating' => 'setNbcplRating',
        'nfrc_rating' => 'setNfrcRating',
        'nfvcb_rating' => 'setNfvcbRating',
        'nkclv_rating' => 'setNkclvRating',
        'oflc_rating' => 'setOflcRating',
        'pefilm_rating' => 'setPefilmRating',
        'rcnof_rating' => 'setRcnofRating',
        'resorteviolencia_rating' => 'setResorteviolenciaRating',
        'rtc_rating' => 'setRtcRating',
        'rte_rating' => 'setRteRating',
        'russia_rating' => 'setRussiaRating',
        'skfilm_rating' => 'setSkfilmRating',
        'smais_rating' => 'setSmaisRating',
        'smsa_rating' => 'setSmsaRating',
        'tvpg_rating' => 'setTvpgRating',
        'yt_rating' => 'setYtRating'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'acb_rating' => 'getAcbRating',
        'agcom_rating' => 'getAgcomRating',
        'anatel_rating' => 'getAnatelRating',
        'bbfc_rating' => 'getBbfcRating',
        'bfvc_rating' => 'getBfvcRating',
        'bmukk_rating' => 'getBmukkRating',
        'catv_rating' => 'getCatvRating',
        'catvfr_rating' => 'getCatvfrRating',
        'cbfc_rating' => 'getCbfcRating',
        'ccc_rating' => 'getCccRating',
        'cce_rating' => 'getCceRating',
        'chfilm_rating' => 'getChfilmRating',
        'chvrs_rating' => 'getChvrsRating',
        'cicf_rating' => 'getCicfRating',
        'cna_rating' => 'getCnaRating',
        'cnc_rating' => 'getCncRating',
        'csa_rating' => 'getCsaRating',
        'cscf_rating' => 'getCscfRating',
        'czfilm_rating' => 'getCzfilmRating',
        'djctq_rating' => 'getDjctqRating',
        'djctq_rating_reasons' => 'getDjctqRatingReasons',
        'ecbmct_rating' => 'getEcbmctRating',
        'eefilm_rating' => 'getEefilmRating',
        'egfilm_rating' => 'getEgfilmRating',
        'eirin_rating' => 'getEirinRating',
        'fcbm_rating' => 'getFcbmRating',
        'fco_rating' => 'getFcoRating',
        'fmoc_rating' => 'getFmocRating',
        'fpb_rating' => 'getFpbRating',
        'fpb_rating_reasons' => 'getFpbRatingReasons',
        'fsk_rating' => 'getFskRating',
        'grfilm_rating' => 'getGrfilmRating',
        'icaa_rating' => 'getIcaaRating',
        'ifco_rating' => 'getIfcoRating',
        'ilfilm_rating' => 'getIlfilmRating',
        'incaa_rating' => 'getIncaaRating',
        'kfcb_rating' => 'getKfcbRating',
        'kijkwijzer_rating' => 'getKijkwijzerRating',
        'kmrb_rating' => 'getKmrbRating',
        'lsf_rating' => 'getLsfRating',
        'mccaa_rating' => 'getMccaaRating',
        'mccyp_rating' => 'getMccypRating',
        'mcst_rating' => 'getMcstRating',
        'mda_rating' => 'getMdaRating',
        'medietilsynet_rating' => 'getMedietilsynetRating',
        'meku_rating' => 'getMekuRating',
        'mena_mpaa_rating' => 'getMenaMpaaRating',
        'mibac_rating' => 'getMibacRating',
        'moc_rating' => 'getMocRating',
        'moctw_rating' => 'getMoctwRating',
        'mpaa_rating' => 'getMpaaRating',
        'mpaat_rating' => 'getMpaatRating',
        'mtrcb_rating' => 'getMtrcbRating',
        'nbc_rating' => 'getNbcRating',
        'nbcpl_rating' => 'getNbcplRating',
        'nfrc_rating' => 'getNfrcRating',
        'nfvcb_rating' => 'getNfvcbRating',
        'nkclv_rating' => 'getNkclvRating',
        'oflc_rating' => 'getOflcRating',
        'pefilm_rating' => 'getPefilmRating',
        'rcnof_rating' => 'getRcnofRating',
        'resorteviolencia_rating' => 'getResorteviolenciaRating',
        'rtc_rating' => 'getRtcRating',
        'rte_rating' => 'getRteRating',
        'russia_rating' => 'getRussiaRating',
        'skfilm_rating' => 'getSkfilmRating',
        'smais_rating' => 'getSmaisRating',
        'smsa_rating' => 'getSmsaRating',
        'tvpg_rating' => 'getTvpgRating',
        'yt_rating' => 'getYtRating'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const ACB_RATING_ACB_C = 'acbC';
    const ACB_RATING_ACB_E = 'acbE';
    const ACB_RATING_ACB_G = 'acbG';
    const ACB_RATING_ACB_M = 'acbM';
    const ACB_RATING_ACB_MA15PLUS = 'acbMa15plus';
    const ACB_RATING_ACB_P = 'acbP';
    const ACB_RATING_ACB_PG = 'acbPg';
    const ACB_RATING_ACB_R18PLUS = 'acbR18plus';
    const ACB_RATING_ACB_UNRATED = 'acbUnrated';
    const AGCOM_RATING_AGCOM_T = 'agcomT';
    const AGCOM_RATING_AGCOM_UNRATED = 'agcomUnrated';
    const AGCOM_RATING_AGCOM_VM14 = 'agcomVm14';
    const AGCOM_RATING_AGCOM_VM18 = 'agcomVm18';
    const ANATEL_RATING_ANATEL_A = 'anatelA';
    const ANATEL_RATING_ANATEL_F = 'anatelF';
    const ANATEL_RATING_ANATEL_I = 'anatelI';
    const ANATEL_RATING_ANATEL_I10 = 'anatelI10';
    const ANATEL_RATING_ANATEL_I12 = 'anatelI12';
    const ANATEL_RATING_ANATEL_I7 = 'anatelI7';
    const ANATEL_RATING_ANATEL_R = 'anatelR';
    const ANATEL_RATING_ANATEL_UNRATED = 'anatelUnrated';
    const BBFC_RATING_BBFC12 = 'bbfc12';
    const BBFC_RATING_BBFC12A = 'bbfc12a';
    const BBFC_RATING_BBFC15 = 'bbfc15';
    const BBFC_RATING_BBFC18 = 'bbfc18';
    const BBFC_RATING_BBFC_PG = 'bbfcPg';
    const BBFC_RATING_BBFC_R18 = 'bbfcR18';
    const BBFC_RATING_BBFC_U = 'bbfcU';
    const BBFC_RATING_BBFC_UNRATED = 'bbfcUnrated';
    const BFVC_RATING_BFVC13 = 'bfvc13';
    const BFVC_RATING_BFVC15 = 'bfvc15';
    const BFVC_RATING_BFVC18 = 'bfvc18';
    const BFVC_RATING_BFVC20 = 'bfvc20';
    const BFVC_RATING_BFVC_B = 'bfvcB';
    const BFVC_RATING_BFVC_E = 'bfvcE';
    const BFVC_RATING_BFVC_G = 'bfvcG';
    const BFVC_RATING_BFVC_UNRATED = 'bfvcUnrated';
    const BMUKK_RATING_BMUKK10 = 'bmukk10';
    const BMUKK_RATING_BMUKK12 = 'bmukk12';
    const BMUKK_RATING_BMUKK14 = 'bmukk14';
    const BMUKK_RATING_BMUKK16 = 'bmukk16';
    const BMUKK_RATING_BMUKK6 = 'bmukk6';
    const BMUKK_RATING_BMUKK8 = 'bmukk8';
    const BMUKK_RATING_BMUKK_AA = 'bmukkAa';
    const BMUKK_RATING_BMUKK_UNRATED = 'bmukkUnrated';
    const CATV_RATING_CATV14PLUS = 'catv14plus';
    const CATV_RATING_CATV18PLUS = 'catv18plus';
    const CATV_RATING_CATV_C = 'catvC';
    const CATV_RATING_CATV_C8 = 'catvC8';
    const CATV_RATING_CATV_G = 'catvG';
    const CATV_RATING_CATV_PG = 'catvPg';
    const CATV_RATING_CATV_UNRATED = 'catvUnrated';
    const CATVFR_RATING_CATVFR13PLUS = 'catvfr13plus';
    const CATVFR_RATING_CATVFR16PLUS = 'catvfr16plus';
    const CATVFR_RATING_CATVFR18PLUS = 'catvfr18plus';
    const CATVFR_RATING_CATVFR8PLUS = 'catvfr8plus';
    const CATVFR_RATING_CATVFR_G = 'catvfrG';
    const CATVFR_RATING_CATVFR_UNRATED = 'catvfrUnrated';
    const CBFC_RATING_CBFC_A = 'cbfcA';
    const CBFC_RATING_CBFC_S = 'cbfcS';
    const CBFC_RATING_CBFC_U = 'cbfcU';
    const CBFC_RATING_CBFC_UA = 'cbfcUA';
    const CBFC_RATING_CBFC_UNRATED = 'cbfcUnrated';
    const CCC_RATING_CCC14 = 'ccc14';
    const CCC_RATING_CCC18 = 'ccc18';
    const CCC_RATING_CCC18S = 'ccc18s';
    const CCC_RATING_CCC18V = 'ccc18v';
    const CCC_RATING_CCC6 = 'ccc6';
    const CCC_RATING_CCC_TE = 'cccTe';
    const CCC_RATING_CCC_UNRATED = 'cccUnrated';
    const CCE_RATING_CCE_M12 = 'cceM12';
    const CCE_RATING_CCE_M14 = 'cceM14';
    const CCE_RATING_CCE_M16 = 'cceM16';
    const CCE_RATING_CCE_M18 = 'cceM18';
    const CCE_RATING_CCE_M4 = 'cceM4';
    const CCE_RATING_CCE_M6 = 'cceM6';
    const CCE_RATING_CCE_UNRATED = 'cceUnrated';
    const CHFILM_RATING_CHFILM0 = 'chfilm0';
    const CHFILM_RATING_CHFILM12 = 'chfilm12';
    const CHFILM_RATING_CHFILM16 = 'chfilm16';
    const CHFILM_RATING_CHFILM18 = 'chfilm18';
    const CHFILM_RATING_CHFILM6 = 'chfilm6';
    const CHFILM_RATING_CHFILM_UNRATED = 'chfilmUnrated';
    const CHVRS_RATING_CHVRS14A = 'chvrs14a';
    const CHVRS_RATING_CHVRS18A = 'chvrs18a';
    const CHVRS_RATING_CHVRS_E = 'chvrsE';
    const CHVRS_RATING_CHVRS_G = 'chvrsG';
    const CHVRS_RATING_CHVRS_PG = 'chvrsPg';
    const CHVRS_RATING_CHVRS_R = 'chvrsR';
    const CHVRS_RATING_CHVRS_UNRATED = 'chvrsUnrated';
    const CICF_RATING_CICF_E = 'cicfE';
    const CICF_RATING_CICF_KNT_ENA = 'cicfKntEna';
    const CICF_RATING_CICF_KT_EA = 'cicfKtEa';
    const CICF_RATING_CICF_UNRATED = 'cicfUnrated';
    const CNA_RATING_CNA12 = 'cna12';
    const CNA_RATING_CNA15 = 'cna15';
    const CNA_RATING_CNA18 = 'cna18';
    const CNA_RATING_CNA18PLUS = 'cna18plus';
    const CNA_RATING_CNA_AP = 'cnaAp';
    const CNA_RATING_CNA_UNRATED = 'cnaUnrated';
    const CNC_RATING_CNC10 = 'cnc10';
    const CNC_RATING_CNC12 = 'cnc12';
    const CNC_RATING_CNC16 = 'cnc16';
    const CNC_RATING_CNC18 = 'cnc18';
    const CNC_RATING_CNC_E = 'cncE';
    const CNC_RATING_CNC_T = 'cncT';
    const CNC_RATING_CNC_UNRATED = 'cncUnrated';
    const CSA_RATING_CSA10 = 'csa10';
    const CSA_RATING_CSA12 = 'csa12';
    const CSA_RATING_CSA16 = 'csa16';
    const CSA_RATING_CSA18 = 'csa18';
    const CSA_RATING_CSA_INTERDICTION = 'csaInterdiction';
    const CSA_RATING_CSA_T = 'csaT';
    const CSA_RATING_CSA_UNRATED = 'csaUnrated';
    const CSCF_RATING_CSCF12 = 'cscf12';
    const CSCF_RATING_CSCF16 = 'cscf16';
    const CSCF_RATING_CSCF18 = 'cscf18';
    const CSCF_RATING_CSCF6 = 'cscf6';
    const CSCF_RATING_CSCF9 = 'cscf9';
    const CSCF_RATING_CSCF_A = 'cscfA';
    const CSCF_RATING_CSCF_AL = 'cscfAl';
    const CSCF_RATING_CSCF_UNRATED = 'cscfUnrated';
    const CZFILM_RATING_CZFILM12 = 'czfilm12';
    const CZFILM_RATING_CZFILM14 = 'czfilm14';
    const CZFILM_RATING_CZFILM18 = 'czfilm18';
    const CZFILM_RATING_CZFILM_U = 'czfilmU';
    const CZFILM_RATING_CZFILM_UNRATED = 'czfilmUnrated';
    const DJCTQ_RATING_DJCTQ10 = 'djctq10';
    const DJCTQ_RATING_DJCTQ12 = 'djctq12';
    const DJCTQ_RATING_DJCTQ14 = 'djctq14';
    const DJCTQ_RATING_DJCTQ16 = 'djctq16';
    const DJCTQ_RATING_DJCTQ18 = 'djctq18';
    const DJCTQ_RATING_DJCTQ_L = 'djctqL';
    const DJCTQ_RATING_DJCTQ_UNRATED = 'djctqUnrated';
    const DJCTQ_RATING_REASONS_DJCTQ_CRIMINAL_ACTS = 'djctqCriminalActs';
    const DJCTQ_RATING_REASONS_DJCTQ_DRUGS = 'djctqDrugs';
    const DJCTQ_RATING_REASONS_DJCTQ_EXPLICIT_SEX = 'djctqExplicitSex';
    const DJCTQ_RATING_REASONS_DJCTQ_EXTREME_VIOLENCE = 'djctqExtremeViolence';
    const DJCTQ_RATING_REASONS_DJCTQ_ILLEGAL_DRUGS = 'djctqIllegalDrugs';
    const DJCTQ_RATING_REASONS_DJCTQ_IMPACTING_CONTENT = 'djctqImpactingContent';
    const DJCTQ_RATING_REASONS_DJCTQ_INAPPROPRIATE_LANGUAGE = 'djctqInappropriateLanguage';
    const DJCTQ_RATING_REASONS_DJCTQ_LEGAL_DRUGS = 'djctqLegalDrugs';
    const DJCTQ_RATING_REASONS_DJCTQ_NUDITY = 'djctqNudity';
    const DJCTQ_RATING_REASONS_DJCTQ_SEX = 'djctqSex';
    const DJCTQ_RATING_REASONS_DJCTQ_SEXUAL_CONTENT = 'djctqSexualContent';
    const DJCTQ_RATING_REASONS_DJCTQ_VIOLENCE = 'djctqViolence';
    const ECBMCT_RATING_ECBMCT13A = 'ecbmct13a';
    const ECBMCT_RATING_ECBMCT13PLUS = 'ecbmct13plus';
    const ECBMCT_RATING_ECBMCT15A = 'ecbmct15a';
    const ECBMCT_RATING_ECBMCT15PLUS = 'ecbmct15plus';
    const ECBMCT_RATING_ECBMCT18PLUS = 'ecbmct18plus';
    const ECBMCT_RATING_ECBMCT7A = 'ecbmct7a';
    const ECBMCT_RATING_ECBMCT7PLUS = 'ecbmct7plus';
    const ECBMCT_RATING_ECBMCT_G = 'ecbmctG';
    const ECBMCT_RATING_ECBMCT_UNRATED = 'ecbmctUnrated';
    const EEFILM_RATING_EEFILM_K12 = 'eefilmK12';
    const EEFILM_RATING_EEFILM_K14 = 'eefilmK14';
    const EEFILM_RATING_EEFILM_K16 = 'eefilmK16';
    const EEFILM_RATING_EEFILM_K6 = 'eefilmK6';
    const EEFILM_RATING_EEFILM_L = 'eefilmL';
    const EEFILM_RATING_EEFILM_MS12 = 'eefilmMs12';
    const EEFILM_RATING_EEFILM_MS6 = 'eefilmMs6';
    const EEFILM_RATING_EEFILM_PERE = 'eefilmPere';
    const EEFILM_RATING_EEFILM_UNRATED = 'eefilmUnrated';
    const EGFILM_RATING_EGFILM18 = 'egfilm18';
    const EGFILM_RATING_EGFILM_BN = 'egfilmBn';
    const EGFILM_RATING_EGFILM_GN = 'egfilmGn';
    const EGFILM_RATING_EGFILM_UNRATED = 'egfilmUnrated';
    const EIRIN_RATING_EIRIN_G = 'eirinG';
    const EIRIN_RATING_EIRIN_PG12 = 'eirinPg12';
    const EIRIN_RATING_EIRIN_R15PLUS = 'eirinR15plus';
    const EIRIN_RATING_EIRIN_R18PLUS = 'eirinR18plus';
    const EIRIN_RATING_EIRIN_UNRATED = 'eirinUnrated';
    const FCBM_RATING_FCBM18 = 'fcbm18';
    const FCBM_RATING_FCBM18PA = 'fcbm18pa';
    const FCBM_RATING_FCBM18PL = 'fcbm18pl';
    const FCBM_RATING_FCBM18SG = 'fcbm18sg';
    const FCBM_RATING_FCBM18SX = 'fcbm18sx';
    const FCBM_RATING_FCBM_P13 = 'fcbmP13';
    const FCBM_RATING_FCBM_PG13 = 'fcbmPg13';
    const FCBM_RATING_FCBM_U = 'fcbmU';
    const FCBM_RATING_FCBM_UNRATED = 'fcbmUnrated';
    const FCO_RATING_FCO_I = 'fcoI';
    const FCO_RATING_FCO_II = 'fcoIi';
    const FCO_RATING_FCO_IIA = 'fcoIia';
    const FCO_RATING_FCO_IIB = 'fcoIib';
    const FCO_RATING_FCO_III = 'fcoIii';
    const FCO_RATING_FCO_UNRATED = 'fcoUnrated';
    const FMOC_RATING_FMOC10 = 'fmoc10';
    const FMOC_RATING_FMOC12 = 'fmoc12';
    const FMOC_RATING_FMOC16 = 'fmoc16';
    const FMOC_RATING_FMOC18 = 'fmoc18';
    const FMOC_RATING_FMOC_E = 'fmocE';
    const FMOC_RATING_FMOC_U = 'fmocU';
    const FMOC_RATING_FMOC_UNRATED = 'fmocUnrated';
    const FPB_RATING_FPB10 = 'fpb10';
    const FPB_RATING_FPB1012_PG = 'fpb1012Pg';
    const FPB_RATING_FPB13 = 'fpb13';
    const FPB_RATING_FPB16 = 'fpb16';
    const FPB_RATING_FPB18 = 'fpb18';
    const FPB_RATING_FPB79_PG = 'fpb79Pg';
    const FPB_RATING_FPB_A = 'fpbA';
    const FPB_RATING_FPB_PG = 'fpbPg';
    const FPB_RATING_FPB_UNRATED = 'fpbUnrated';
    const FPB_RATING_FPB_X18 = 'fpbX18';
    const FPB_RATING_FPB_XX = 'fpbXx';
    const FPB_RATING_REASONS_FPB_BLASPHEMY = 'fpbBlasphemy';
    const FPB_RATING_REASONS_FPB_CRIMINAL_TECHNIQUES = 'fpbCriminalTechniques';
    const FPB_RATING_REASONS_FPB_DRUGS = 'fpbDrugs';
    const FPB_RATING_REASONS_FPB_HORROR = 'fpbHorror';
    const FPB_RATING_REASONS_FPB_IMITATIVE_ACTS_TECHNIQUES = 'fpbImitativeActsTechniques';
    const FPB_RATING_REASONS_FPB_LANGUAGE = 'fpbLanguage';
    const FPB_RATING_REASONS_FPB_NUDITY = 'fpbNudity';
    const FPB_RATING_REASONS_FPB_PREJUDICE = 'fpbPrejudice';
    const FPB_RATING_REASONS_FPB_SEX = 'fpbSex';
    const FPB_RATING_REASONS_FPB_SEXUAL_VIOLENCE = 'fpbSexualViolence';
    const FPB_RATING_REASONS_FPB_VIOLENCE = 'fpbViolence';
    const FSK_RATING_FSK0 = 'fsk0';
    const FSK_RATING_FSK12 = 'fsk12';
    const FSK_RATING_FSK16 = 'fsk16';
    const FSK_RATING_FSK18 = 'fsk18';
    const FSK_RATING_FSK6 = 'fsk6';
    const FSK_RATING_FSK_UNRATED = 'fskUnrated';
    const GRFILM_RATING_GRFILM_E = 'grfilmE';
    const GRFILM_RATING_GRFILM_K = 'grfilmK';
    const GRFILM_RATING_GRFILM_K12 = 'grfilmK12';
    const GRFILM_RATING_GRFILM_K13 = 'grfilmK13';
    const GRFILM_RATING_GRFILM_K15 = 'grfilmK15';
    const GRFILM_RATING_GRFILM_K17 = 'grfilmK17';
    const GRFILM_RATING_GRFILM_K18 = 'grfilmK18';
    const GRFILM_RATING_GRFILM_UNRATED = 'grfilmUnrated';
    const ICAA_RATING_ICAA12 = 'icaa12';
    const ICAA_RATING_ICAA13 = 'icaa13';
    const ICAA_RATING_ICAA16 = 'icaa16';
    const ICAA_RATING_ICAA18 = 'icaa18';
    const ICAA_RATING_ICAA7 = 'icaa7';
    const ICAA_RATING_ICAA_APTA = 'icaaApta';
    const ICAA_RATING_ICAA_UNRATED = 'icaaUnrated';
    const ICAA_RATING_ICAA_X = 'icaaX';
    const IFCO_RATING_IFCO12 = 'ifco12';
    const IFCO_RATING_IFCO12A = 'ifco12a';
    const IFCO_RATING_IFCO15 = 'ifco15';
    const IFCO_RATING_IFCO15A = 'ifco15a';
    const IFCO_RATING_IFCO16 = 'ifco16';
    const IFCO_RATING_IFCO18 = 'ifco18';
    const IFCO_RATING_IFCO_G = 'ifcoG';
    const IFCO_RATING_IFCO_PG = 'ifcoPg';
    const IFCO_RATING_IFCO_UNRATED = 'ifcoUnrated';
    const ILFILM_RATING_ILFILM12 = 'ilfilm12';
    const ILFILM_RATING_ILFILM16 = 'ilfilm16';
    const ILFILM_RATING_ILFILM18 = 'ilfilm18';
    const ILFILM_RATING_ILFILM_AA = 'ilfilmAa';
    const ILFILM_RATING_ILFILM_UNRATED = 'ilfilmUnrated';
    const INCAA_RATING_INCAA_ATP = 'incaaAtp';
    const INCAA_RATING_INCAA_C = 'incaaC';
    const INCAA_RATING_INCAA_SAM13 = 'incaaSam13';
    const INCAA_RATING_INCAA_SAM16 = 'incaaSam16';
    const INCAA_RATING_INCAA_SAM18 = 'incaaSam18';
    const INCAA_RATING_INCAA_UNRATED = 'incaaUnrated';
    const KFCB_RATING_KFCB16PLUS = 'kfcb16plus';
    const KFCB_RATING_KFCB_G = 'kfcbG';
    const KFCB_RATING_KFCB_PG = 'kfcbPg';
    const KFCB_RATING_KFCB_R = 'kfcbR';
    const KFCB_RATING_KFCB_UNRATED = 'kfcbUnrated';
    const KIJKWIJZER_RATING_KIJKWIJZER12 = 'kijkwijzer12';
    const KIJKWIJZER_RATING_KIJKWIJZER16 = 'kijkwijzer16';
    const KIJKWIJZER_RATING_KIJKWIJZER18 = 'kijkwijzer18';
    const KIJKWIJZER_RATING_KIJKWIJZER6 = 'kijkwijzer6';
    const KIJKWIJZER_RATING_KIJKWIJZER9 = 'kijkwijzer9';
    const KIJKWIJZER_RATING_KIJKWIJZER_AL = 'kijkwijzerAl';
    const KIJKWIJZER_RATING_KIJKWIJZER_UNRATED = 'kijkwijzerUnrated';
    const KMRB_RATING_KMRB12PLUS = 'kmrb12plus';
    const KMRB_RATING_KMRB15PLUS = 'kmrb15plus';
    const KMRB_RATING_KMRB_ALL = 'kmrbAll';
    const KMRB_RATING_KMRB_R = 'kmrbR';
    const KMRB_RATING_KMRB_TEENR = 'kmrbTeenr';
    const KMRB_RATING_KMRB_UNRATED = 'kmrbUnrated';
    const LSF_RATING_LSF13 = 'lsf13';
    const LSF_RATING_LSF17 = 'lsf17';
    const LSF_RATING_LSF21 = 'lsf21';
    const LSF_RATING_LSF_A = 'lsfA';
    const LSF_RATING_LSF_BO = 'lsfBo';
    const LSF_RATING_LSF_D = 'lsfD';
    const LSF_RATING_LSF_R = 'lsfR';
    const LSF_RATING_LSF_SU = 'lsfSu';
    const LSF_RATING_LSF_UNRATED = 'lsfUnrated';
    const MCCAA_RATING_MCCAA12 = 'mccaa12';
    const MCCAA_RATING_MCCAA12A = 'mccaa12a';
    const MCCAA_RATING_MCCAA14 = 'mccaa14';
    const MCCAA_RATING_MCCAA15 = 'mccaa15';
    const MCCAA_RATING_MCCAA16 = 'mccaa16';
    const MCCAA_RATING_MCCAA18 = 'mccaa18';
    const MCCAA_RATING_MCCAA_PG = 'mccaaPg';
    const MCCAA_RATING_MCCAA_U = 'mccaaU';
    const MCCAA_RATING_MCCAA_UNRATED = 'mccaaUnrated';
    const MCCYP_RATING_MCCYP11 = 'mccyp11';
    const MCCYP_RATING_MCCYP15 = 'mccyp15';
    const MCCYP_RATING_MCCYP7 = 'mccyp7';
    const MCCYP_RATING_MCCYP_A = 'mccypA';
    const MCCYP_RATING_MCCYP_UNRATED = 'mccypUnrated';
    const MCST_RATING_MCST0 = 'mcst0';
    const MCST_RATING_MCST16PLUS = 'mcst16plus';
    const MCST_RATING_MCST_C13 = 'mcstC13';
    const MCST_RATING_MCST_C16 = 'mcstC16';
    const MCST_RATING_MCST_C18 = 'mcstC18';
    const MCST_RATING_MCST_G_PG = 'mcstGPg';
    const MCST_RATING_MCST_P = 'mcstP';
    const MCST_RATING_MCST_UNRATED = 'mcstUnrated';
    const MDA_RATING_MDA_G = 'mdaG';
    const MDA_RATING_MDA_M18 = 'mdaM18';
    const MDA_RATING_MDA_NC16 = 'mdaNc16';
    const MDA_RATING_MDA_PG = 'mdaPg';
    const MDA_RATING_MDA_PG13 = 'mdaPg13';
    const MDA_RATING_MDA_R21 = 'mdaR21';
    const MDA_RATING_MDA_UNRATED = 'mdaUnrated';
    const MEDIETILSYNET_RATING_MEDIETILSYNET11 = 'medietilsynet11';
    const MEDIETILSYNET_RATING_MEDIETILSYNET12 = 'medietilsynet12';
    const MEDIETILSYNET_RATING_MEDIETILSYNET15 = 'medietilsynet15';
    const MEDIETILSYNET_RATING_MEDIETILSYNET18 = 'medietilsynet18';
    const MEDIETILSYNET_RATING_MEDIETILSYNET6 = 'medietilsynet6';
    const MEDIETILSYNET_RATING_MEDIETILSYNET7 = 'medietilsynet7';
    const MEDIETILSYNET_RATING_MEDIETILSYNET9 = 'medietilsynet9';
    const MEDIETILSYNET_RATING_MEDIETILSYNET_A = 'medietilsynetA';
    const MEDIETILSYNET_RATING_MEDIETILSYNET_UNRATED = 'medietilsynetUnrated';
    const MEKU_RATING_MEKU12 = 'meku12';
    const MEKU_RATING_MEKU16 = 'meku16';
    const MEKU_RATING_MEKU18 = 'meku18';
    const MEKU_RATING_MEKU7 = 'meku7';
    const MEKU_RATING_MEKU_S = 'mekuS';
    const MEKU_RATING_MEKU_UNRATED = 'mekuUnrated';
    const MENA_MPAA_RATING_MENA_MPAA_G = 'menaMpaaG';
    const MENA_MPAA_RATING_MENA_MPAA_PG = 'menaMpaaPg';
    const MENA_MPAA_RATING_MENA_MPAA_PG13 = 'menaMpaaPg13';
    const MENA_MPAA_RATING_MENA_MPAA_R = 'menaMpaaR';
    const MENA_MPAA_RATING_MENA_MPAA_UNRATED = 'menaMpaaUnrated';
    const MIBAC_RATING_MIBAC_T = 'mibacT';
    const MIBAC_RATING_MIBAC_UNRATED = 'mibacUnrated';
    const MIBAC_RATING_MIBAC_VAP = 'mibacVap';
    const MIBAC_RATING_MIBAC_VM12 = 'mibacVm12';
    const MIBAC_RATING_MIBAC_VM14 = 'mibacVm14';
    const MIBAC_RATING_MIBAC_VM18 = 'mibacVm18';
    const MOC_RATING_MOC12 = 'moc12';
    const MOC_RATING_MOC15 = 'moc15';
    const MOC_RATING_MOC18 = 'moc18';
    const MOC_RATING_MOC7 = 'moc7';
    const MOC_RATING_MOC_BANNED = 'mocBanned';
    const MOC_RATING_MOC_E = 'mocE';
    const MOC_RATING_MOC_T = 'mocT';
    const MOC_RATING_MOC_UNRATED = 'mocUnrated';
    const MOC_RATING_MOC_X = 'mocX';
    const MOCTW_RATING_MOCTW_G = 'moctwG';
    const MOCTW_RATING_MOCTW_P = 'moctwP';
    const MOCTW_RATING_MOCTW_PG = 'moctwPg';
    const MOCTW_RATING_MOCTW_R = 'moctwR';
    const MOCTW_RATING_MOCTW_R12 = 'moctwR12';
    const MOCTW_RATING_MOCTW_R15 = 'moctwR15';
    const MOCTW_RATING_MOCTW_UNRATED = 'moctwUnrated';
    const MPAA_RATING_MPAA_G = 'mpaaG';
    const MPAA_RATING_MPAA_NC17 = 'mpaaNc17';
    const MPAA_RATING_MPAA_PG = 'mpaaPg';
    const MPAA_RATING_MPAA_PG13 = 'mpaaPg13';
    const MPAA_RATING_MPAA_R = 'mpaaR';
    const MPAA_RATING_MPAA_UNRATED = 'mpaaUnrated';
    const MPAAT_RATING_MPAAT_GB = 'mpaatGb';
    const MPAAT_RATING_MPAAT_RB = 'mpaatRb';
    const MTRCB_RATING_MTRCB_G = 'mtrcbG';
    const MTRCB_RATING_MTRCB_PG = 'mtrcbPg';
    const MTRCB_RATING_MTRCB_R13 = 'mtrcbR13';
    const MTRCB_RATING_MTRCB_R16 = 'mtrcbR16';
    const MTRCB_RATING_MTRCB_R18 = 'mtrcbR18';
    const MTRCB_RATING_MTRCB_UNRATED = 'mtrcbUnrated';
    const MTRCB_RATING_MTRCB_X = 'mtrcbX';
    const NBC_RATING_NBC12PLUS = 'nbc12plus';
    const NBC_RATING_NBC15PLUS = 'nbc15plus';
    const NBC_RATING_NBC18PLUS = 'nbc18plus';
    const NBC_RATING_NBC18PLUSR = 'nbc18plusr';
    const NBC_RATING_NBC_G = 'nbcG';
    const NBC_RATING_NBC_PG = 'nbcPg';
    const NBC_RATING_NBC_PU = 'nbcPu';
    const NBC_RATING_NBC_UNRATED = 'nbcUnrated';
    const NBCPL_RATING_NBCPL18PLUS = 'nbcpl18plus';
    const NBCPL_RATING_NBCPL_I = 'nbcplI';
    const NBCPL_RATING_NBCPL_II = 'nbcplIi';
    const NBCPL_RATING_NBCPL_III = 'nbcplIii';
    const NBCPL_RATING_NBCPL_IV = 'nbcplIv';
    const NBCPL_RATING_NBCPL_UNRATED = 'nbcplUnrated';
    const NFRC_RATING_NFRC_A = 'nfrcA';
    const NFRC_RATING_NFRC_B = 'nfrcB';
    const NFRC_RATING_NFRC_C = 'nfrcC';
    const NFRC_RATING_NFRC_D = 'nfrcD';
    const NFRC_RATING_NFRC_UNRATED = 'nfrcUnrated';
    const NFRC_RATING_NFRC_X = 'nfrcX';
    const NFVCB_RATING_NFVCB12 = 'nfvcb12';
    const NFVCB_RATING_NFVCB12A = 'nfvcb12a';
    const NFVCB_RATING_NFVCB15 = 'nfvcb15';
    const NFVCB_RATING_NFVCB18 = 'nfvcb18';
    const NFVCB_RATING_NFVCB_G = 'nfvcbG';
    const NFVCB_RATING_NFVCB_PG = 'nfvcbPg';
    const NFVCB_RATING_NFVCB_RE = 'nfvcbRe';
    const NFVCB_RATING_NFVCB_UNRATED = 'nfvcbUnrated';
    const NKCLV_RATING_NKCLV12PLUS = 'nkclv12plus';
    const NKCLV_RATING_NKCLV18PLUS = 'nkclv18plus';
    const NKCLV_RATING_NKCLV7PLUS = 'nkclv7plus';
    const NKCLV_RATING_NKCLV_U = 'nkclvU';
    const NKCLV_RATING_NKCLV_UNRATED = 'nkclvUnrated';
    const OFLC_RATING_OFLC_G = 'oflcG';
    const OFLC_RATING_OFLC_M = 'oflcM';
    const OFLC_RATING_OFLC_PG = 'oflcPg';
    const OFLC_RATING_OFLC_R13 = 'oflcR13';
    const OFLC_RATING_OFLC_R15 = 'oflcR15';
    const OFLC_RATING_OFLC_R16 = 'oflcR16';
    const OFLC_RATING_OFLC_R18 = 'oflcR18';
    const OFLC_RATING_OFLC_RP13 = 'oflcRp13';
    const OFLC_RATING_OFLC_RP16 = 'oflcRp16';
    const OFLC_RATING_OFLC_RP18 = 'oflcRp18';
    const OFLC_RATING_OFLC_UNRATED = 'oflcUnrated';
    const PEFILM_RATING_PEFILM14 = 'pefilm14';
    const PEFILM_RATING_PEFILM18 = 'pefilm18';
    const PEFILM_RATING_PEFILM_PG = 'pefilmPg';
    const PEFILM_RATING_PEFILM_PT = 'pefilmPt';
    const PEFILM_RATING_PEFILM_UNRATED = 'pefilmUnrated';
    const RCNOF_RATING_RCNOF_I = 'rcnofI';
    const RCNOF_RATING_RCNOF_II = 'rcnofIi';
    const RCNOF_RATING_RCNOF_III = 'rcnofIii';
    const RCNOF_RATING_RCNOF_IV = 'rcnofIv';
    const RCNOF_RATING_RCNOF_UNRATED = 'rcnofUnrated';
    const RCNOF_RATING_RCNOF_V = 'rcnofV';
    const RCNOF_RATING_RCNOF_VI = 'rcnofVi';
    const RESORTEVIOLENCIA_RATING_RESORTEVIOLENCIA_A = 'resorteviolenciaA';
    const RESORTEVIOLENCIA_RATING_RESORTEVIOLENCIA_B = 'resorteviolenciaB';
    const RESORTEVIOLENCIA_RATING_RESORTEVIOLENCIA_C = 'resorteviolenciaC';
    const RESORTEVIOLENCIA_RATING_RESORTEVIOLENCIA_D = 'resorteviolenciaD';
    const RESORTEVIOLENCIA_RATING_RESORTEVIOLENCIA_E = 'resorteviolenciaE';
    const RESORTEVIOLENCIA_RATING_RESORTEVIOLENCIA_UNRATED = 'resorteviolenciaUnrated';
    const RTC_RATING_RTC_A = 'rtcA';
    const RTC_RATING_RTC_AA = 'rtcAa';
    const RTC_RATING_RTC_B = 'rtcB';
    const RTC_RATING_RTC_B15 = 'rtcB15';
    const RTC_RATING_RTC_C = 'rtcC';
    const RTC_RATING_RTC_D = 'rtcD';
    const RTC_RATING_RTC_UNRATED = 'rtcUnrated';
    const RTE_RATING_RTE_CH = 'rteCh';
    const RTE_RATING_RTE_GA = 'rteGa';
    const RTE_RATING_RTE_MA = 'rteMa';
    const RTE_RATING_RTE_PS = 'rtePs';
    const RTE_RATING_RTE_UNRATED = 'rteUnrated';
    const RUSSIA_RATING_RUSSIA0 = 'russia0';
    const RUSSIA_RATING_RUSSIA12 = 'russia12';
    const RUSSIA_RATING_RUSSIA16 = 'russia16';
    const RUSSIA_RATING_RUSSIA18 = 'russia18';
    const RUSSIA_RATING_RUSSIA6 = 'russia6';
    const RUSSIA_RATING_RUSSIA_UNRATED = 'russiaUnrated';
    const SKFILM_RATING_SKFILM_G = 'skfilmG';
    const SKFILM_RATING_SKFILM_P2 = 'skfilmP2';
    const SKFILM_RATING_SKFILM_P5 = 'skfilmP5';
    const SKFILM_RATING_SKFILM_P8 = 'skfilmP8';
    const SKFILM_RATING_SKFILM_UNRATED = 'skfilmUnrated';
    const SMAIS_RATING_SMAIS12 = 'smais12';
    const SMAIS_RATING_SMAIS14 = 'smais14';
    const SMAIS_RATING_SMAIS16 = 'smais16';
    const SMAIS_RATING_SMAIS18 = 'smais18';
    const SMAIS_RATING_SMAIS7 = 'smais7';
    const SMAIS_RATING_SMAIS_L = 'smaisL';
    const SMAIS_RATING_SMAIS_UNRATED = 'smaisUnrated';
    const SMSA_RATING_SMSA11 = 'smsa11';
    const SMSA_RATING_SMSA15 = 'smsa15';
    const SMSA_RATING_SMSA7 = 'smsa7';
    const SMSA_RATING_SMSA_A = 'smsaA';
    const SMSA_RATING_SMSA_UNRATED = 'smsaUnrated';
    const TVPG_RATING_PG14 = 'pg14';
    const TVPG_RATING_TVPG_G = 'tvpgG';
    const TVPG_RATING_TVPG_MA = 'tvpgMa';
    const TVPG_RATING_TVPG_PG = 'tvpgPg';
    const TVPG_RATING_TVPG_UNRATED = 'tvpgUnrated';
    const TVPG_RATING_TVPG_Y = 'tvpgY';
    const TVPG_RATING_TVPG_Y7 = 'tvpgY7';
    const TVPG_RATING_TVPG_Y7_FV = 'tvpgY7Fv';
    const YT_RATING_YT_AGE_RESTRICTED = 'ytAgeRestricted';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getAcbRatingAllowableValues()
    {
        return [
            self::ACB_RATING_ACB_C,
            self::ACB_RATING_ACB_E,
            self::ACB_RATING_ACB_G,
            self::ACB_RATING_ACB_M,
            self::ACB_RATING_ACB_MA15PLUS,
            self::ACB_RATING_ACB_P,
            self::ACB_RATING_ACB_PG,
            self::ACB_RATING_ACB_R18PLUS,
            self::ACB_RATING_ACB_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getAgcomRatingAllowableValues()
    {
        return [
            self::AGCOM_RATING_AGCOM_T,
            self::AGCOM_RATING_AGCOM_UNRATED,
            self::AGCOM_RATING_AGCOM_VM14,
            self::AGCOM_RATING_AGCOM_VM18,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getAnatelRatingAllowableValues()
    {
        return [
            self::ANATEL_RATING_ANATEL_A,
            self::ANATEL_RATING_ANATEL_F,
            self::ANATEL_RATING_ANATEL_I,
            self::ANATEL_RATING_ANATEL_I10,
            self::ANATEL_RATING_ANATEL_I12,
            self::ANATEL_RATING_ANATEL_I7,
            self::ANATEL_RATING_ANATEL_R,
            self::ANATEL_RATING_ANATEL_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getBbfcRatingAllowableValues()
    {
        return [
            self::BBFC_RATING_BBFC12,
            self::BBFC_RATING_BBFC12A,
            self::BBFC_RATING_BBFC15,
            self::BBFC_RATING_BBFC18,
            self::BBFC_RATING_BBFC_PG,
            self::BBFC_RATING_BBFC_R18,
            self::BBFC_RATING_BBFC_U,
            self::BBFC_RATING_BBFC_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getBfvcRatingAllowableValues()
    {
        return [
            self::BFVC_RATING_BFVC13,
            self::BFVC_RATING_BFVC15,
            self::BFVC_RATING_BFVC18,
            self::BFVC_RATING_BFVC20,
            self::BFVC_RATING_BFVC_B,
            self::BFVC_RATING_BFVC_E,
            self::BFVC_RATING_BFVC_G,
            self::BFVC_RATING_BFVC_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getBmukkRatingAllowableValues()
    {
        return [
            self::BMUKK_RATING_BMUKK10,
            self::BMUKK_RATING_BMUKK12,
            self::BMUKK_RATING_BMUKK14,
            self::BMUKK_RATING_BMUKK16,
            self::BMUKK_RATING_BMUKK6,
            self::BMUKK_RATING_BMUKK8,
            self::BMUKK_RATING_BMUKK_AA,
            self::BMUKK_RATING_BMUKK_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCatvRatingAllowableValues()
    {
        return [
            self::CATV_RATING_CATV14PLUS,
            self::CATV_RATING_CATV18PLUS,
            self::CATV_RATING_CATV_C,
            self::CATV_RATING_CATV_C8,
            self::CATV_RATING_CATV_G,
            self::CATV_RATING_CATV_PG,
            self::CATV_RATING_CATV_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCatvfrRatingAllowableValues()
    {
        return [
            self::CATVFR_RATING_CATVFR13PLUS,
            self::CATVFR_RATING_CATVFR16PLUS,
            self::CATVFR_RATING_CATVFR18PLUS,
            self::CATVFR_RATING_CATVFR8PLUS,
            self::CATVFR_RATING_CATVFR_G,
            self::CATVFR_RATING_CATVFR_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCbfcRatingAllowableValues()
    {
        return [
            self::CBFC_RATING_CBFC_A,
            self::CBFC_RATING_CBFC_S,
            self::CBFC_RATING_CBFC_U,
            self::CBFC_RATING_CBFC_UA,
            self::CBFC_RATING_CBFC_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCccRatingAllowableValues()
    {
        return [
            self::CCC_RATING_CCC14,
            self::CCC_RATING_CCC18,
            self::CCC_RATING_CCC18S,
            self::CCC_RATING_CCC18V,
            self::CCC_RATING_CCC6,
            self::CCC_RATING_CCC_TE,
            self::CCC_RATING_CCC_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCceRatingAllowableValues()
    {
        return [
            self::CCE_RATING_CCE_M12,
            self::CCE_RATING_CCE_M14,
            self::CCE_RATING_CCE_M16,
            self::CCE_RATING_CCE_M18,
            self::CCE_RATING_CCE_M4,
            self::CCE_RATING_CCE_M6,
            self::CCE_RATING_CCE_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChfilmRatingAllowableValues()
    {
        return [
            self::CHFILM_RATING_CHFILM0,
            self::CHFILM_RATING_CHFILM12,
            self::CHFILM_RATING_CHFILM16,
            self::CHFILM_RATING_CHFILM18,
            self::CHFILM_RATING_CHFILM6,
            self::CHFILM_RATING_CHFILM_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChvrsRatingAllowableValues()
    {
        return [
            self::CHVRS_RATING_CHVRS14A,
            self::CHVRS_RATING_CHVRS18A,
            self::CHVRS_RATING_CHVRS_E,
            self::CHVRS_RATING_CHVRS_G,
            self::CHVRS_RATING_CHVRS_PG,
            self::CHVRS_RATING_CHVRS_R,
            self::CHVRS_RATING_CHVRS_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCicfRatingAllowableValues()
    {
        return [
            self::CICF_RATING_CICF_E,
            self::CICF_RATING_CICF_KNT_ENA,
            self::CICF_RATING_CICF_KT_EA,
            self::CICF_RATING_CICF_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCnaRatingAllowableValues()
    {
        return [
            self::CNA_RATING_CNA12,
            self::CNA_RATING_CNA15,
            self::CNA_RATING_CNA18,
            self::CNA_RATING_CNA18PLUS,
            self::CNA_RATING_CNA_AP,
            self::CNA_RATING_CNA_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCncRatingAllowableValues()
    {
        return [
            self::CNC_RATING_CNC10,
            self::CNC_RATING_CNC12,
            self::CNC_RATING_CNC16,
            self::CNC_RATING_CNC18,
            self::CNC_RATING_CNC_E,
            self::CNC_RATING_CNC_T,
            self::CNC_RATING_CNC_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCsaRatingAllowableValues()
    {
        return [
            self::CSA_RATING_CSA10,
            self::CSA_RATING_CSA12,
            self::CSA_RATING_CSA16,
            self::CSA_RATING_CSA18,
            self::CSA_RATING_CSA_INTERDICTION,
            self::CSA_RATING_CSA_T,
            self::CSA_RATING_CSA_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCscfRatingAllowableValues()
    {
        return [
            self::CSCF_RATING_CSCF12,
            self::CSCF_RATING_CSCF16,
            self::CSCF_RATING_CSCF18,
            self::CSCF_RATING_CSCF6,
            self::CSCF_RATING_CSCF9,
            self::CSCF_RATING_CSCF_A,
            self::CSCF_RATING_CSCF_AL,
            self::CSCF_RATING_CSCF_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCzfilmRatingAllowableValues()
    {
        return [
            self::CZFILM_RATING_CZFILM12,
            self::CZFILM_RATING_CZFILM14,
            self::CZFILM_RATING_CZFILM18,
            self::CZFILM_RATING_CZFILM_U,
            self::CZFILM_RATING_CZFILM_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getDjctqRatingAllowableValues()
    {
        return [
            self::DJCTQ_RATING_DJCTQ10,
            self::DJCTQ_RATING_DJCTQ12,
            self::DJCTQ_RATING_DJCTQ14,
            self::DJCTQ_RATING_DJCTQ16,
            self::DJCTQ_RATING_DJCTQ18,
            self::DJCTQ_RATING_DJCTQ_L,
            self::DJCTQ_RATING_DJCTQ_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getDjctqRatingReasonsAllowableValues()
    {
        return [
            self::DJCTQ_RATING_REASONS_DJCTQ_CRIMINAL_ACTS,
            self::DJCTQ_RATING_REASONS_DJCTQ_DRUGS,
            self::DJCTQ_RATING_REASONS_DJCTQ_EXPLICIT_SEX,
            self::DJCTQ_RATING_REASONS_DJCTQ_EXTREME_VIOLENCE,
            self::DJCTQ_RATING_REASONS_DJCTQ_ILLEGAL_DRUGS,
            self::DJCTQ_RATING_REASONS_DJCTQ_IMPACTING_CONTENT,
            self::DJCTQ_RATING_REASONS_DJCTQ_INAPPROPRIATE_LANGUAGE,
            self::DJCTQ_RATING_REASONS_DJCTQ_LEGAL_DRUGS,
            self::DJCTQ_RATING_REASONS_DJCTQ_NUDITY,
            self::DJCTQ_RATING_REASONS_DJCTQ_SEX,
            self::DJCTQ_RATING_REASONS_DJCTQ_SEXUAL_CONTENT,
            self::DJCTQ_RATING_REASONS_DJCTQ_VIOLENCE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getEcbmctRatingAllowableValues()
    {
        return [
            self::ECBMCT_RATING_ECBMCT13A,
            self::ECBMCT_RATING_ECBMCT13PLUS,
            self::ECBMCT_RATING_ECBMCT15A,
            self::ECBMCT_RATING_ECBMCT15PLUS,
            self::ECBMCT_RATING_ECBMCT18PLUS,
            self::ECBMCT_RATING_ECBMCT7A,
            self::ECBMCT_RATING_ECBMCT7PLUS,
            self::ECBMCT_RATING_ECBMCT_G,
            self::ECBMCT_RATING_ECBMCT_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getEefilmRatingAllowableValues()
    {
        return [
            self::EEFILM_RATING_EEFILM_K12,
            self::EEFILM_RATING_EEFILM_K14,
            self::EEFILM_RATING_EEFILM_K16,
            self::EEFILM_RATING_EEFILM_K6,
            self::EEFILM_RATING_EEFILM_L,
            self::EEFILM_RATING_EEFILM_MS12,
            self::EEFILM_RATING_EEFILM_MS6,
            self::EEFILM_RATING_EEFILM_PERE,
            self::EEFILM_RATING_EEFILM_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getEgfilmRatingAllowableValues()
    {
        return [
            self::EGFILM_RATING_EGFILM18,
            self::EGFILM_RATING_EGFILM_BN,
            self::EGFILM_RATING_EGFILM_GN,
            self::EGFILM_RATING_EGFILM_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getEirinRatingAllowableValues()
    {
        return [
            self::EIRIN_RATING_EIRIN_G,
            self::EIRIN_RATING_EIRIN_PG12,
            self::EIRIN_RATING_EIRIN_R15PLUS,
            self::EIRIN_RATING_EIRIN_R18PLUS,
            self::EIRIN_RATING_EIRIN_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getFcbmRatingAllowableValues()
    {
        return [
            self::FCBM_RATING_FCBM18,
            self::FCBM_RATING_FCBM18PA,
            self::FCBM_RATING_FCBM18PL,
            self::FCBM_RATING_FCBM18SG,
            self::FCBM_RATING_FCBM18SX,
            self::FCBM_RATING_FCBM_P13,
            self::FCBM_RATING_FCBM_PG13,
            self::FCBM_RATING_FCBM_U,
            self::FCBM_RATING_FCBM_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getFcoRatingAllowableValues()
    {
        return [
            self::FCO_RATING_FCO_I,
            self::FCO_RATING_FCO_II,
            self::FCO_RATING_FCO_IIA,
            self::FCO_RATING_FCO_IIB,
            self::FCO_RATING_FCO_III,
            self::FCO_RATING_FCO_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getFmocRatingAllowableValues()
    {
        return [
            self::FMOC_RATING_FMOC10,
            self::FMOC_RATING_FMOC12,
            self::FMOC_RATING_FMOC16,
            self::FMOC_RATING_FMOC18,
            self::FMOC_RATING_FMOC_E,
            self::FMOC_RATING_FMOC_U,
            self::FMOC_RATING_FMOC_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getFpbRatingAllowableValues()
    {
        return [
            self::FPB_RATING_FPB10,
            self::FPB_RATING_FPB1012_PG,
            self::FPB_RATING_FPB13,
            self::FPB_RATING_FPB16,
            self::FPB_RATING_FPB18,
            self::FPB_RATING_FPB79_PG,
            self::FPB_RATING_FPB_A,
            self::FPB_RATING_FPB_PG,
            self::FPB_RATING_FPB_UNRATED,
            self::FPB_RATING_FPB_X18,
            self::FPB_RATING_FPB_XX,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getFpbRatingReasonsAllowableValues()
    {
        return [
            self::FPB_RATING_REASONS_FPB_BLASPHEMY,
            self::FPB_RATING_REASONS_FPB_CRIMINAL_TECHNIQUES,
            self::FPB_RATING_REASONS_FPB_DRUGS,
            self::FPB_RATING_REASONS_FPB_HORROR,
            self::FPB_RATING_REASONS_FPB_IMITATIVE_ACTS_TECHNIQUES,
            self::FPB_RATING_REASONS_FPB_LANGUAGE,
            self::FPB_RATING_REASONS_FPB_NUDITY,
            self::FPB_RATING_REASONS_FPB_PREJUDICE,
            self::FPB_RATING_REASONS_FPB_SEX,
            self::FPB_RATING_REASONS_FPB_SEXUAL_VIOLENCE,
            self::FPB_RATING_REASONS_FPB_VIOLENCE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getFskRatingAllowableValues()
    {
        return [
            self::FSK_RATING_FSK0,
            self::FSK_RATING_FSK12,
            self::FSK_RATING_FSK16,
            self::FSK_RATING_FSK18,
            self::FSK_RATING_FSK6,
            self::FSK_RATING_FSK_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getGrfilmRatingAllowableValues()
    {
        return [
            self::GRFILM_RATING_GRFILM_E,
            self::GRFILM_RATING_GRFILM_K,
            self::GRFILM_RATING_GRFILM_K12,
            self::GRFILM_RATING_GRFILM_K13,
            self::GRFILM_RATING_GRFILM_K15,
            self::GRFILM_RATING_GRFILM_K17,
            self::GRFILM_RATING_GRFILM_K18,
            self::GRFILM_RATING_GRFILM_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getIcaaRatingAllowableValues()
    {
        return [
            self::ICAA_RATING_ICAA12,
            self::ICAA_RATING_ICAA13,
            self::ICAA_RATING_ICAA16,
            self::ICAA_RATING_ICAA18,
            self::ICAA_RATING_ICAA7,
            self::ICAA_RATING_ICAA_APTA,
            self::ICAA_RATING_ICAA_UNRATED,
            self::ICAA_RATING_ICAA_X,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getIfcoRatingAllowableValues()
    {
        return [
            self::IFCO_RATING_IFCO12,
            self::IFCO_RATING_IFCO12A,
            self::IFCO_RATING_IFCO15,
            self::IFCO_RATING_IFCO15A,
            self::IFCO_RATING_IFCO16,
            self::IFCO_RATING_IFCO18,
            self::IFCO_RATING_IFCO_G,
            self::IFCO_RATING_IFCO_PG,
            self::IFCO_RATING_IFCO_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getIlfilmRatingAllowableValues()
    {
        return [
            self::ILFILM_RATING_ILFILM12,
            self::ILFILM_RATING_ILFILM16,
            self::ILFILM_RATING_ILFILM18,
            self::ILFILM_RATING_ILFILM_AA,
            self::ILFILM_RATING_ILFILM_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getIncaaRatingAllowableValues()
    {
        return [
            self::INCAA_RATING_INCAA_ATP,
            self::INCAA_RATING_INCAA_C,
            self::INCAA_RATING_INCAA_SAM13,
            self::INCAA_RATING_INCAA_SAM16,
            self::INCAA_RATING_INCAA_SAM18,
            self::INCAA_RATING_INCAA_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getKfcbRatingAllowableValues()
    {
        return [
            self::KFCB_RATING_KFCB16PLUS,
            self::KFCB_RATING_KFCB_G,
            self::KFCB_RATING_KFCB_PG,
            self::KFCB_RATING_KFCB_R,
            self::KFCB_RATING_KFCB_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getKijkwijzerRatingAllowableValues()
    {
        return [
            self::KIJKWIJZER_RATING_KIJKWIJZER12,
            self::KIJKWIJZER_RATING_KIJKWIJZER16,
            self::KIJKWIJZER_RATING_KIJKWIJZER18,
            self::KIJKWIJZER_RATING_KIJKWIJZER6,
            self::KIJKWIJZER_RATING_KIJKWIJZER9,
            self::KIJKWIJZER_RATING_KIJKWIJZER_AL,
            self::KIJKWIJZER_RATING_KIJKWIJZER_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getKmrbRatingAllowableValues()
    {
        return [
            self::KMRB_RATING_KMRB12PLUS,
            self::KMRB_RATING_KMRB15PLUS,
            self::KMRB_RATING_KMRB_ALL,
            self::KMRB_RATING_KMRB_R,
            self::KMRB_RATING_KMRB_TEENR,
            self::KMRB_RATING_KMRB_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getLsfRatingAllowableValues()
    {
        return [
            self::LSF_RATING_LSF13,
            self::LSF_RATING_LSF17,
            self::LSF_RATING_LSF21,
            self::LSF_RATING_LSF_A,
            self::LSF_RATING_LSF_BO,
            self::LSF_RATING_LSF_D,
            self::LSF_RATING_LSF_R,
            self::LSF_RATING_LSF_SU,
            self::LSF_RATING_LSF_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMccaaRatingAllowableValues()
    {
        return [
            self::MCCAA_RATING_MCCAA12,
            self::MCCAA_RATING_MCCAA12A,
            self::MCCAA_RATING_MCCAA14,
            self::MCCAA_RATING_MCCAA15,
            self::MCCAA_RATING_MCCAA16,
            self::MCCAA_RATING_MCCAA18,
            self::MCCAA_RATING_MCCAA_PG,
            self::MCCAA_RATING_MCCAA_U,
            self::MCCAA_RATING_MCCAA_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMccypRatingAllowableValues()
    {
        return [
            self::MCCYP_RATING_MCCYP11,
            self::MCCYP_RATING_MCCYP15,
            self::MCCYP_RATING_MCCYP7,
            self::MCCYP_RATING_MCCYP_A,
            self::MCCYP_RATING_MCCYP_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMcstRatingAllowableValues()
    {
        return [
            self::MCST_RATING_MCST0,
            self::MCST_RATING_MCST16PLUS,
            self::MCST_RATING_MCST_C13,
            self::MCST_RATING_MCST_C16,
            self::MCST_RATING_MCST_C18,
            self::MCST_RATING_MCST_G_PG,
            self::MCST_RATING_MCST_P,
            self::MCST_RATING_MCST_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMdaRatingAllowableValues()
    {
        return [
            self::MDA_RATING_MDA_G,
            self::MDA_RATING_MDA_M18,
            self::MDA_RATING_MDA_NC16,
            self::MDA_RATING_MDA_PG,
            self::MDA_RATING_MDA_PG13,
            self::MDA_RATING_MDA_R21,
            self::MDA_RATING_MDA_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMedietilsynetRatingAllowableValues()
    {
        return [
            self::MEDIETILSYNET_RATING_MEDIETILSYNET11,
            self::MEDIETILSYNET_RATING_MEDIETILSYNET12,
            self::MEDIETILSYNET_RATING_MEDIETILSYNET15,
            self::MEDIETILSYNET_RATING_MEDIETILSYNET18,
            self::MEDIETILSYNET_RATING_MEDIETILSYNET6,
            self::MEDIETILSYNET_RATING_MEDIETILSYNET7,
            self::MEDIETILSYNET_RATING_MEDIETILSYNET9,
            self::MEDIETILSYNET_RATING_MEDIETILSYNET_A,
            self::MEDIETILSYNET_RATING_MEDIETILSYNET_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMekuRatingAllowableValues()
    {
        return [
            self::MEKU_RATING_MEKU12,
            self::MEKU_RATING_MEKU16,
            self::MEKU_RATING_MEKU18,
            self::MEKU_RATING_MEKU7,
            self::MEKU_RATING_MEKU_S,
            self::MEKU_RATING_MEKU_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMenaMpaaRatingAllowableValues()
    {
        return [
            self::MENA_MPAA_RATING_MENA_MPAA_G,
            self::MENA_MPAA_RATING_MENA_MPAA_PG,
            self::MENA_MPAA_RATING_MENA_MPAA_PG13,
            self::MENA_MPAA_RATING_MENA_MPAA_R,
            self::MENA_MPAA_RATING_MENA_MPAA_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMibacRatingAllowableValues()
    {
        return [
            self::MIBAC_RATING_MIBAC_T,
            self::MIBAC_RATING_MIBAC_UNRATED,
            self::MIBAC_RATING_MIBAC_VAP,
            self::MIBAC_RATING_MIBAC_VM12,
            self::MIBAC_RATING_MIBAC_VM14,
            self::MIBAC_RATING_MIBAC_VM18,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMocRatingAllowableValues()
    {
        return [
            self::MOC_RATING_MOC12,
            self::MOC_RATING_MOC15,
            self::MOC_RATING_MOC18,
            self::MOC_RATING_MOC7,
            self::MOC_RATING_MOC_BANNED,
            self::MOC_RATING_MOC_E,
            self::MOC_RATING_MOC_T,
            self::MOC_RATING_MOC_UNRATED,
            self::MOC_RATING_MOC_X,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMoctwRatingAllowableValues()
    {
        return [
            self::MOCTW_RATING_MOCTW_G,
            self::MOCTW_RATING_MOCTW_P,
            self::MOCTW_RATING_MOCTW_PG,
            self::MOCTW_RATING_MOCTW_R,
            self::MOCTW_RATING_MOCTW_R12,
            self::MOCTW_RATING_MOCTW_R15,
            self::MOCTW_RATING_MOCTW_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMpaaRatingAllowableValues()
    {
        return [
            self::MPAA_RATING_MPAA_G,
            self::MPAA_RATING_MPAA_NC17,
            self::MPAA_RATING_MPAA_PG,
            self::MPAA_RATING_MPAA_PG13,
            self::MPAA_RATING_MPAA_R,
            self::MPAA_RATING_MPAA_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMpaatRatingAllowableValues()
    {
        return [
            self::MPAAT_RATING_MPAAT_GB,
            self::MPAAT_RATING_MPAAT_RB,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMtrcbRatingAllowableValues()
    {
        return [
            self::MTRCB_RATING_MTRCB_G,
            self::MTRCB_RATING_MTRCB_PG,
            self::MTRCB_RATING_MTRCB_R13,
            self::MTRCB_RATING_MTRCB_R16,
            self::MTRCB_RATING_MTRCB_R18,
            self::MTRCB_RATING_MTRCB_UNRATED,
            self::MTRCB_RATING_MTRCB_X,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getNbcRatingAllowableValues()
    {
        return [
            self::NBC_RATING_NBC12PLUS,
            self::NBC_RATING_NBC15PLUS,
            self::NBC_RATING_NBC18PLUS,
            self::NBC_RATING_NBC18PLUSR,
            self::NBC_RATING_NBC_G,
            self::NBC_RATING_NBC_PG,
            self::NBC_RATING_NBC_PU,
            self::NBC_RATING_NBC_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getNbcplRatingAllowableValues()
    {
        return [
            self::NBCPL_RATING_NBCPL18PLUS,
            self::NBCPL_RATING_NBCPL_I,
            self::NBCPL_RATING_NBCPL_II,
            self::NBCPL_RATING_NBCPL_III,
            self::NBCPL_RATING_NBCPL_IV,
            self::NBCPL_RATING_NBCPL_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getNfrcRatingAllowableValues()
    {
        return [
            self::NFRC_RATING_NFRC_A,
            self::NFRC_RATING_NFRC_B,
            self::NFRC_RATING_NFRC_C,
            self::NFRC_RATING_NFRC_D,
            self::NFRC_RATING_NFRC_UNRATED,
            self::NFRC_RATING_NFRC_X,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getNfvcbRatingAllowableValues()
    {
        return [
            self::NFVCB_RATING_NFVCB12,
            self::NFVCB_RATING_NFVCB12A,
            self::NFVCB_RATING_NFVCB15,
            self::NFVCB_RATING_NFVCB18,
            self::NFVCB_RATING_NFVCB_G,
            self::NFVCB_RATING_NFVCB_PG,
            self::NFVCB_RATING_NFVCB_RE,
            self::NFVCB_RATING_NFVCB_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getNkclvRatingAllowableValues()
    {
        return [
            self::NKCLV_RATING_NKCLV12PLUS,
            self::NKCLV_RATING_NKCLV18PLUS,
            self::NKCLV_RATING_NKCLV7PLUS,
            self::NKCLV_RATING_NKCLV_U,
            self::NKCLV_RATING_NKCLV_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getOflcRatingAllowableValues()
    {
        return [
            self::OFLC_RATING_OFLC_G,
            self::OFLC_RATING_OFLC_M,
            self::OFLC_RATING_OFLC_PG,
            self::OFLC_RATING_OFLC_R13,
            self::OFLC_RATING_OFLC_R15,
            self::OFLC_RATING_OFLC_R16,
            self::OFLC_RATING_OFLC_R18,
            self::OFLC_RATING_OFLC_RP13,
            self::OFLC_RATING_OFLC_RP16,
            self::OFLC_RATING_OFLC_RP18,
            self::OFLC_RATING_OFLC_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getPefilmRatingAllowableValues()
    {
        return [
            self::PEFILM_RATING_PEFILM14,
            self::PEFILM_RATING_PEFILM18,
            self::PEFILM_RATING_PEFILM_PG,
            self::PEFILM_RATING_PEFILM_PT,
            self::PEFILM_RATING_PEFILM_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getRcnofRatingAllowableValues()
    {
        return [
            self::RCNOF_RATING_RCNOF_I,
            self::RCNOF_RATING_RCNOF_II,
            self::RCNOF_RATING_RCNOF_III,
            self::RCNOF_RATING_RCNOF_IV,
            self::RCNOF_RATING_RCNOF_UNRATED,
            self::RCNOF_RATING_RCNOF_V,
            self::RCNOF_RATING_RCNOF_VI,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getResorteviolenciaRatingAllowableValues()
    {
        return [
            self::RESORTEVIOLENCIA_RATING_RESORTEVIOLENCIA_A,
            self::RESORTEVIOLENCIA_RATING_RESORTEVIOLENCIA_B,
            self::RESORTEVIOLENCIA_RATING_RESORTEVIOLENCIA_C,
            self::RESORTEVIOLENCIA_RATING_RESORTEVIOLENCIA_D,
            self::RESORTEVIOLENCIA_RATING_RESORTEVIOLENCIA_E,
            self::RESORTEVIOLENCIA_RATING_RESORTEVIOLENCIA_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getRtcRatingAllowableValues()
    {
        return [
            self::RTC_RATING_RTC_A,
            self::RTC_RATING_RTC_AA,
            self::RTC_RATING_RTC_B,
            self::RTC_RATING_RTC_B15,
            self::RTC_RATING_RTC_C,
            self::RTC_RATING_RTC_D,
            self::RTC_RATING_RTC_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getRteRatingAllowableValues()
    {
        return [
            self::RTE_RATING_RTE_CH,
            self::RTE_RATING_RTE_GA,
            self::RTE_RATING_RTE_MA,
            self::RTE_RATING_RTE_PS,
            self::RTE_RATING_RTE_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getRussiaRatingAllowableValues()
    {
        return [
            self::RUSSIA_RATING_RUSSIA0,
            self::RUSSIA_RATING_RUSSIA12,
            self::RUSSIA_RATING_RUSSIA16,
            self::RUSSIA_RATING_RUSSIA18,
            self::RUSSIA_RATING_RUSSIA6,
            self::RUSSIA_RATING_RUSSIA_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getSkfilmRatingAllowableValues()
    {
        return [
            self::SKFILM_RATING_SKFILM_G,
            self::SKFILM_RATING_SKFILM_P2,
            self::SKFILM_RATING_SKFILM_P5,
            self::SKFILM_RATING_SKFILM_P8,
            self::SKFILM_RATING_SKFILM_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getSmaisRatingAllowableValues()
    {
        return [
            self::SMAIS_RATING_SMAIS12,
            self::SMAIS_RATING_SMAIS14,
            self::SMAIS_RATING_SMAIS16,
            self::SMAIS_RATING_SMAIS18,
            self::SMAIS_RATING_SMAIS7,
            self::SMAIS_RATING_SMAIS_L,
            self::SMAIS_RATING_SMAIS_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getSmsaRatingAllowableValues()
    {
        return [
            self::SMSA_RATING_SMSA11,
            self::SMSA_RATING_SMSA15,
            self::SMSA_RATING_SMSA7,
            self::SMSA_RATING_SMSA_A,
            self::SMSA_RATING_SMSA_UNRATED,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getTvpgRatingAllowableValues()
    {
        return [
            self::TVPG_RATING_PG14,
            self::TVPG_RATING_TVPG_G,
            self::TVPG_RATING_TVPG_MA,
            self::TVPG_RATING_TVPG_PG,
            self::TVPG_RATING_TVPG_UNRATED,
            self::TVPG_RATING_TVPG_Y,
            self::TVPG_RATING_TVPG_Y7,
            self::TVPG_RATING_TVPG_Y7_FV,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getYtRatingAllowableValues()
    {
        return [
            self::YT_RATING_YT_AGE_RESTRICTED,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['acb_rating'] = isset($data['acb_rating']) ? $data['acb_rating'] : null;
        $this->container['agcom_rating'] = isset($data['agcom_rating']) ? $data['agcom_rating'] : null;
        $this->container['anatel_rating'] = isset($data['anatel_rating']) ? $data['anatel_rating'] : null;
        $this->container['bbfc_rating'] = isset($data['bbfc_rating']) ? $data['bbfc_rating'] : null;
        $this->container['bfvc_rating'] = isset($data['bfvc_rating']) ? $data['bfvc_rating'] : null;
        $this->container['bmukk_rating'] = isset($data['bmukk_rating']) ? $data['bmukk_rating'] : null;
        $this->container['catv_rating'] = isset($data['catv_rating']) ? $data['catv_rating'] : null;
        $this->container['catvfr_rating'] = isset($data['catvfr_rating']) ? $data['catvfr_rating'] : null;
        $this->container['cbfc_rating'] = isset($data['cbfc_rating']) ? $data['cbfc_rating'] : null;
        $this->container['ccc_rating'] = isset($data['ccc_rating']) ? $data['ccc_rating'] : null;
        $this->container['cce_rating'] = isset($data['cce_rating']) ? $data['cce_rating'] : null;
        $this->container['chfilm_rating'] = isset($data['chfilm_rating']) ? $data['chfilm_rating'] : null;
        $this->container['chvrs_rating'] = isset($data['chvrs_rating']) ? $data['chvrs_rating'] : null;
        $this->container['cicf_rating'] = isset($data['cicf_rating']) ? $data['cicf_rating'] : null;
        $this->container['cna_rating'] = isset($data['cna_rating']) ? $data['cna_rating'] : null;
        $this->container['cnc_rating'] = isset($data['cnc_rating']) ? $data['cnc_rating'] : null;
        $this->container['csa_rating'] = isset($data['csa_rating']) ? $data['csa_rating'] : null;
        $this->container['cscf_rating'] = isset($data['cscf_rating']) ? $data['cscf_rating'] : null;
        $this->container['czfilm_rating'] = isset($data['czfilm_rating']) ? $data['czfilm_rating'] : null;
        $this->container['djctq_rating'] = isset($data['djctq_rating']) ? $data['djctq_rating'] : null;
        $this->container['djctq_rating_reasons'] = isset($data['djctq_rating_reasons']) ? $data['djctq_rating_reasons'] : null;
        $this->container['ecbmct_rating'] = isset($data['ecbmct_rating']) ? $data['ecbmct_rating'] : null;
        $this->container['eefilm_rating'] = isset($data['eefilm_rating']) ? $data['eefilm_rating'] : null;
        $this->container['egfilm_rating'] = isset($data['egfilm_rating']) ? $data['egfilm_rating'] : null;
        $this->container['eirin_rating'] = isset($data['eirin_rating']) ? $data['eirin_rating'] : null;
        $this->container['fcbm_rating'] = isset($data['fcbm_rating']) ? $data['fcbm_rating'] : null;
        $this->container['fco_rating'] = isset($data['fco_rating']) ? $data['fco_rating'] : null;
        $this->container['fmoc_rating'] = isset($data['fmoc_rating']) ? $data['fmoc_rating'] : null;
        $this->container['fpb_rating'] = isset($data['fpb_rating']) ? $data['fpb_rating'] : null;
        $this->container['fpb_rating_reasons'] = isset($data['fpb_rating_reasons']) ? $data['fpb_rating_reasons'] : null;
        $this->container['fsk_rating'] = isset($data['fsk_rating']) ? $data['fsk_rating'] : null;
        $this->container['grfilm_rating'] = isset($data['grfilm_rating']) ? $data['grfilm_rating'] : null;
        $this->container['icaa_rating'] = isset($data['icaa_rating']) ? $data['icaa_rating'] : null;
        $this->container['ifco_rating'] = isset($data['ifco_rating']) ? $data['ifco_rating'] : null;
        $this->container['ilfilm_rating'] = isset($data['ilfilm_rating']) ? $data['ilfilm_rating'] : null;
        $this->container['incaa_rating'] = isset($data['incaa_rating']) ? $data['incaa_rating'] : null;
        $this->container['kfcb_rating'] = isset($data['kfcb_rating']) ? $data['kfcb_rating'] : null;
        $this->container['kijkwijzer_rating'] = isset($data['kijkwijzer_rating']) ? $data['kijkwijzer_rating'] : null;
        $this->container['kmrb_rating'] = isset($data['kmrb_rating']) ? $data['kmrb_rating'] : null;
        $this->container['lsf_rating'] = isset($data['lsf_rating']) ? $data['lsf_rating'] : null;
        $this->container['mccaa_rating'] = isset($data['mccaa_rating']) ? $data['mccaa_rating'] : null;
        $this->container['mccyp_rating'] = isset($data['mccyp_rating']) ? $data['mccyp_rating'] : null;
        $this->container['mcst_rating'] = isset($data['mcst_rating']) ? $data['mcst_rating'] : null;
        $this->container['mda_rating'] = isset($data['mda_rating']) ? $data['mda_rating'] : null;
        $this->container['medietilsynet_rating'] = isset($data['medietilsynet_rating']) ? $data['medietilsynet_rating'] : null;
        $this->container['meku_rating'] = isset($data['meku_rating']) ? $data['meku_rating'] : null;
        $this->container['mena_mpaa_rating'] = isset($data['mena_mpaa_rating']) ? $data['mena_mpaa_rating'] : null;
        $this->container['mibac_rating'] = isset($data['mibac_rating']) ? $data['mibac_rating'] : null;
        $this->container['moc_rating'] = isset($data['moc_rating']) ? $data['moc_rating'] : null;
        $this->container['moctw_rating'] = isset($data['moctw_rating']) ? $data['moctw_rating'] : null;
        $this->container['mpaa_rating'] = isset($data['mpaa_rating']) ? $data['mpaa_rating'] : null;
        $this->container['mpaat_rating'] = isset($data['mpaat_rating']) ? $data['mpaat_rating'] : null;
        $this->container['mtrcb_rating'] = isset($data['mtrcb_rating']) ? $data['mtrcb_rating'] : null;
        $this->container['nbc_rating'] = isset($data['nbc_rating']) ? $data['nbc_rating'] : null;
        $this->container['nbcpl_rating'] = isset($data['nbcpl_rating']) ? $data['nbcpl_rating'] : null;
        $this->container['nfrc_rating'] = isset($data['nfrc_rating']) ? $data['nfrc_rating'] : null;
        $this->container['nfvcb_rating'] = isset($data['nfvcb_rating']) ? $data['nfvcb_rating'] : null;
        $this->container['nkclv_rating'] = isset($data['nkclv_rating']) ? $data['nkclv_rating'] : null;
        $this->container['oflc_rating'] = isset($data['oflc_rating']) ? $data['oflc_rating'] : null;
        $this->container['pefilm_rating'] = isset($data['pefilm_rating']) ? $data['pefilm_rating'] : null;
        $this->container['rcnof_rating'] = isset($data['rcnof_rating']) ? $data['rcnof_rating'] : null;
        $this->container['resorteviolencia_rating'] = isset($data['resorteviolencia_rating']) ? $data['resorteviolencia_rating'] : null;
        $this->container['rtc_rating'] = isset($data['rtc_rating']) ? $data['rtc_rating'] : null;
        $this->container['rte_rating'] = isset($data['rte_rating']) ? $data['rte_rating'] : null;
        $this->container['russia_rating'] = isset($data['russia_rating']) ? $data['russia_rating'] : null;
        $this->container['skfilm_rating'] = isset($data['skfilm_rating']) ? $data['skfilm_rating'] : null;
        $this->container['smais_rating'] = isset($data['smais_rating']) ? $data['smais_rating'] : null;
        $this->container['smsa_rating'] = isset($data['smsa_rating']) ? $data['smsa_rating'] : null;
        $this->container['tvpg_rating'] = isset($data['tvpg_rating']) ? $data['tvpg_rating'] : null;
        $this->container['yt_rating'] = isset($data['yt_rating']) ? $data['yt_rating'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getAcbRatingAllowableValues();
        if (!in_array($this->container['acb_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'acb_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getAgcomRatingAllowableValues();
        if (!in_array($this->container['agcom_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'agcom_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getAnatelRatingAllowableValues();
        if (!in_array($this->container['anatel_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'anatel_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getBbfcRatingAllowableValues();
        if (!in_array($this->container['bbfc_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'bbfc_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getBfvcRatingAllowableValues();
        if (!in_array($this->container['bfvc_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'bfvc_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getBmukkRatingAllowableValues();
        if (!in_array($this->container['bmukk_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'bmukk_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getCatvRatingAllowableValues();
        if (!in_array($this->container['catv_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'catv_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getCatvfrRatingAllowableValues();
        if (!in_array($this->container['catvfr_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'catvfr_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getCbfcRatingAllowableValues();
        if (!in_array($this->container['cbfc_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'cbfc_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getCccRatingAllowableValues();
        if (!in_array($this->container['ccc_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'ccc_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getCceRatingAllowableValues();
        if (!in_array($this->container['cce_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'cce_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChfilmRatingAllowableValues();
        if (!in_array($this->container['chfilm_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'chfilm_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getChvrsRatingAllowableValues();
        if (!in_array($this->container['chvrs_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'chvrs_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getCicfRatingAllowableValues();
        if (!in_array($this->container['cicf_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'cicf_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getCnaRatingAllowableValues();
        if (!in_array($this->container['cna_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'cna_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getCncRatingAllowableValues();
        if (!in_array($this->container['cnc_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'cnc_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getCsaRatingAllowableValues();
        if (!in_array($this->container['csa_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'csa_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getCscfRatingAllowableValues();
        if (!in_array($this->container['cscf_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'cscf_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getCzfilmRatingAllowableValues();
        if (!in_array($this->container['czfilm_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'czfilm_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getDjctqRatingAllowableValues();
        if (!in_array($this->container['djctq_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'djctq_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getEcbmctRatingAllowableValues();
        if (!in_array($this->container['ecbmct_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'ecbmct_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getEefilmRatingAllowableValues();
        if (!in_array($this->container['eefilm_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'eefilm_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getEgfilmRatingAllowableValues();
        if (!in_array($this->container['egfilm_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'egfilm_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getEirinRatingAllowableValues();
        if (!in_array($this->container['eirin_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'eirin_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getFcbmRatingAllowableValues();
        if (!in_array($this->container['fcbm_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'fcbm_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getFcoRatingAllowableValues();
        if (!in_array($this->container['fco_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'fco_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getFmocRatingAllowableValues();
        if (!in_array($this->container['fmoc_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'fmoc_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getFpbRatingAllowableValues();
        if (!in_array($this->container['fpb_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'fpb_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getFskRatingAllowableValues();
        if (!in_array($this->container['fsk_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'fsk_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getGrfilmRatingAllowableValues();
        if (!in_array($this->container['grfilm_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'grfilm_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getIcaaRatingAllowableValues();
        if (!in_array($this->container['icaa_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'icaa_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getIfcoRatingAllowableValues();
        if (!in_array($this->container['ifco_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'ifco_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getIlfilmRatingAllowableValues();
        if (!in_array($this->container['ilfilm_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'ilfilm_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getIncaaRatingAllowableValues();
        if (!in_array($this->container['incaa_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'incaa_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getKfcbRatingAllowableValues();
        if (!in_array($this->container['kfcb_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'kfcb_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getKijkwijzerRatingAllowableValues();
        if (!in_array($this->container['kijkwijzer_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'kijkwijzer_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getKmrbRatingAllowableValues();
        if (!in_array($this->container['kmrb_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'kmrb_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getLsfRatingAllowableValues();
        if (!in_array($this->container['lsf_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'lsf_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getMccaaRatingAllowableValues();
        if (!in_array($this->container['mccaa_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'mccaa_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getMccypRatingAllowableValues();
        if (!in_array($this->container['mccyp_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'mccyp_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getMcstRatingAllowableValues();
        if (!in_array($this->container['mcst_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'mcst_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getMdaRatingAllowableValues();
        if (!in_array($this->container['mda_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'mda_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getMedietilsynetRatingAllowableValues();
        if (!in_array($this->container['medietilsynet_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'medietilsynet_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getMekuRatingAllowableValues();
        if (!in_array($this->container['meku_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'meku_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getMenaMpaaRatingAllowableValues();
        if (!in_array($this->container['mena_mpaa_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'mena_mpaa_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getMibacRatingAllowableValues();
        if (!in_array($this->container['mibac_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'mibac_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getMocRatingAllowableValues();
        if (!in_array($this->container['moc_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'moc_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getMoctwRatingAllowableValues();
        if (!in_array($this->container['moctw_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'moctw_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getMpaaRatingAllowableValues();
        if (!in_array($this->container['mpaa_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'mpaa_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getMpaatRatingAllowableValues();
        if (!in_array($this->container['mpaat_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'mpaat_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getMtrcbRatingAllowableValues();
        if (!in_array($this->container['mtrcb_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'mtrcb_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getNbcRatingAllowableValues();
        if (!in_array($this->container['nbc_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'nbc_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getNbcplRatingAllowableValues();
        if (!in_array($this->container['nbcpl_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'nbcpl_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getNfrcRatingAllowableValues();
        if (!in_array($this->container['nfrc_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'nfrc_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getNfvcbRatingAllowableValues();
        if (!in_array($this->container['nfvcb_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'nfvcb_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getNkclvRatingAllowableValues();
        if (!in_array($this->container['nkclv_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'nkclv_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getOflcRatingAllowableValues();
        if (!in_array($this->container['oflc_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'oflc_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getPefilmRatingAllowableValues();
        if (!in_array($this->container['pefilm_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'pefilm_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getRcnofRatingAllowableValues();
        if (!in_array($this->container['rcnof_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'rcnof_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getResorteviolenciaRatingAllowableValues();
        if (!in_array($this->container['resorteviolencia_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'resorteviolencia_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getRtcRatingAllowableValues();
        if (!in_array($this->container['rtc_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'rtc_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getRteRatingAllowableValues();
        if (!in_array($this->container['rte_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'rte_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getRussiaRatingAllowableValues();
        if (!in_array($this->container['russia_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'russia_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getSkfilmRatingAllowableValues();
        if (!in_array($this->container['skfilm_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'skfilm_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getSmaisRatingAllowableValues();
        if (!in_array($this->container['smais_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'smais_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getSmsaRatingAllowableValues();
        if (!in_array($this->container['smsa_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'smsa_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getTvpgRatingAllowableValues();
        if (!in_array($this->container['tvpg_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'tvpg_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getYtRatingAllowableValues();
        if (!in_array($this->container['yt_rating'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'yt_rating', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        $allowedValues = $this->getAcbRatingAllowableValues();
        if (!in_array($this->container['acb_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getAgcomRatingAllowableValues();
        if (!in_array($this->container['agcom_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getAnatelRatingAllowableValues();
        if (!in_array($this->container['anatel_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getBbfcRatingAllowableValues();
        if (!in_array($this->container['bbfc_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getBfvcRatingAllowableValues();
        if (!in_array($this->container['bfvc_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getBmukkRatingAllowableValues();
        if (!in_array($this->container['bmukk_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getCatvRatingAllowableValues();
        if (!in_array($this->container['catv_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getCatvfrRatingAllowableValues();
        if (!in_array($this->container['catvfr_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getCbfcRatingAllowableValues();
        if (!in_array($this->container['cbfc_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getCccRatingAllowableValues();
        if (!in_array($this->container['ccc_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getCceRatingAllowableValues();
        if (!in_array($this->container['cce_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getChfilmRatingAllowableValues();
        if (!in_array($this->container['chfilm_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getChvrsRatingAllowableValues();
        if (!in_array($this->container['chvrs_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getCicfRatingAllowableValues();
        if (!in_array($this->container['cicf_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getCnaRatingAllowableValues();
        if (!in_array($this->container['cna_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getCncRatingAllowableValues();
        if (!in_array($this->container['cnc_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getCsaRatingAllowableValues();
        if (!in_array($this->container['csa_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getCscfRatingAllowableValues();
        if (!in_array($this->container['cscf_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getCzfilmRatingAllowableValues();
        if (!in_array($this->container['czfilm_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getDjctqRatingAllowableValues();
        if (!in_array($this->container['djctq_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getEcbmctRatingAllowableValues();
        if (!in_array($this->container['ecbmct_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getEefilmRatingAllowableValues();
        if (!in_array($this->container['eefilm_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getEgfilmRatingAllowableValues();
        if (!in_array($this->container['egfilm_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getEirinRatingAllowableValues();
        if (!in_array($this->container['eirin_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getFcbmRatingAllowableValues();
        if (!in_array($this->container['fcbm_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getFcoRatingAllowableValues();
        if (!in_array($this->container['fco_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getFmocRatingAllowableValues();
        if (!in_array($this->container['fmoc_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getFpbRatingAllowableValues();
        if (!in_array($this->container['fpb_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getFskRatingAllowableValues();
        if (!in_array($this->container['fsk_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getGrfilmRatingAllowableValues();
        if (!in_array($this->container['grfilm_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getIcaaRatingAllowableValues();
        if (!in_array($this->container['icaa_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getIfcoRatingAllowableValues();
        if (!in_array($this->container['ifco_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getIlfilmRatingAllowableValues();
        if (!in_array($this->container['ilfilm_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getIncaaRatingAllowableValues();
        if (!in_array($this->container['incaa_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getKfcbRatingAllowableValues();
        if (!in_array($this->container['kfcb_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getKijkwijzerRatingAllowableValues();
        if (!in_array($this->container['kijkwijzer_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getKmrbRatingAllowableValues();
        if (!in_array($this->container['kmrb_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getLsfRatingAllowableValues();
        if (!in_array($this->container['lsf_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getMccaaRatingAllowableValues();
        if (!in_array($this->container['mccaa_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getMccypRatingAllowableValues();
        if (!in_array($this->container['mccyp_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getMcstRatingAllowableValues();
        if (!in_array($this->container['mcst_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getMdaRatingAllowableValues();
        if (!in_array($this->container['mda_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getMedietilsynetRatingAllowableValues();
        if (!in_array($this->container['medietilsynet_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getMekuRatingAllowableValues();
        if (!in_array($this->container['meku_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getMenaMpaaRatingAllowableValues();
        if (!in_array($this->container['mena_mpaa_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getMibacRatingAllowableValues();
        if (!in_array($this->container['mibac_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getMocRatingAllowableValues();
        if (!in_array($this->container['moc_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getMoctwRatingAllowableValues();
        if (!in_array($this->container['moctw_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getMpaaRatingAllowableValues();
        if (!in_array($this->container['mpaa_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getMpaatRatingAllowableValues();
        if (!in_array($this->container['mpaat_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getMtrcbRatingAllowableValues();
        if (!in_array($this->container['mtrcb_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getNbcRatingAllowableValues();
        if (!in_array($this->container['nbc_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getNbcplRatingAllowableValues();
        if (!in_array($this->container['nbcpl_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getNfrcRatingAllowableValues();
        if (!in_array($this->container['nfrc_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getNfvcbRatingAllowableValues();
        if (!in_array($this->container['nfvcb_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getNkclvRatingAllowableValues();
        if (!in_array($this->container['nkclv_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getOflcRatingAllowableValues();
        if (!in_array($this->container['oflc_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getPefilmRatingAllowableValues();
        if (!in_array($this->container['pefilm_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getRcnofRatingAllowableValues();
        if (!in_array($this->container['rcnof_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getResorteviolenciaRatingAllowableValues();
        if (!in_array($this->container['resorteviolencia_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getRtcRatingAllowableValues();
        if (!in_array($this->container['rtc_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getRteRatingAllowableValues();
        if (!in_array($this->container['rte_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getRussiaRatingAllowableValues();
        if (!in_array($this->container['russia_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getSkfilmRatingAllowableValues();
        if (!in_array($this->container['skfilm_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getSmaisRatingAllowableValues();
        if (!in_array($this->container['smais_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getSmsaRatingAllowableValues();
        if (!in_array($this->container['smsa_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getTvpgRatingAllowableValues();
        if (!in_array($this->container['tvpg_rating'], $allowedValues)) {
            return false;
        }
        $allowedValues = $this->getYtRatingAllowableValues();
        if (!in_array($this->container['yt_rating'], $allowedValues)) {
            return false;
        }
        return true;
    }


    /**
     * Gets acb_rating
     *
     * @return string
     */
    public function getAcbRating()
    {
        return $this->container['acb_rating'];
    }

    /**
     * Sets acb_rating
     *
     * @param string $acb_rating The video's Australian Classification Board (ACB) or Australian Communications and Media Authority (ACMA) rating. ACMA ratings are used to classify children's television programming.
     *
     * @return $this
     */
    public function setAcbRating($acb_rating)
    {
        $allowedValues = $this->getAcbRatingAllowableValues();
        if (!is_null($acb_rating) && !in_array($acb_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'acb_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['acb_rating'] = $acb_rating;

        return $this;
    }

    /**
     * Gets agcom_rating
     *
     * @return string
     */
    public function getAgcomRating()
    {
        return $this->container['agcom_rating'];
    }

    /**
     * Sets agcom_rating
     *
     * @param string $agcom_rating The video's rating from Italy's Autorità per le Garanzie nelle Comunicazioni (AGCOM).
     *
     * @return $this
     */
    public function setAgcomRating($agcom_rating)
    {
        $allowedValues = $this->getAgcomRatingAllowableValues();
        if (!is_null($agcom_rating) && !in_array($agcom_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'agcom_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['agcom_rating'] = $agcom_rating;

        return $this;
    }

    /**
     * Gets anatel_rating
     *
     * @return string
     */
    public function getAnatelRating()
    {
        return $this->container['anatel_rating'];
    }

    /**
     * Sets anatel_rating
     *
     * @param string $anatel_rating The video's Anatel (Asociación Nacional de Televisión) rating for Chilean television.
     *
     * @return $this
     */
    public function setAnatelRating($anatel_rating)
    {
        $allowedValues = $this->getAnatelRatingAllowableValues();
        if (!is_null($anatel_rating) && !in_array($anatel_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'anatel_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['anatel_rating'] = $anatel_rating;

        return $this;
    }

    /**
     * Gets bbfc_rating
     *
     * @return string
     */
    public function getBbfcRating()
    {
        return $this->container['bbfc_rating'];
    }

    /**
     * Sets bbfc_rating
     *
     * @param string $bbfc_rating The video's British Board of Film Classification (BBFC) rating.
     *
     * @return $this
     */
    public function setBbfcRating($bbfc_rating)
    {
        $allowedValues = $this->getBbfcRatingAllowableValues();
        if (!is_null($bbfc_rating) && !in_array($bbfc_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'bbfc_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['bbfc_rating'] = $bbfc_rating;

        return $this;
    }

    /**
     * Gets bfvc_rating
     *
     * @return string
     */
    public function getBfvcRating()
    {
        return $this->container['bfvc_rating'];
    }

    /**
     * Sets bfvc_rating
     *
     * @param string $bfvc_rating The video's rating from Thailand's Board of Film and Video Censors.
     *
     * @return $this
     */
    public function setBfvcRating($bfvc_rating)
    {
        $allowedValues = $this->getBfvcRatingAllowableValues();
        if (!is_null($bfvc_rating) && !in_array($bfvc_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'bfvc_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['bfvc_rating'] = $bfvc_rating;

        return $this;
    }

    /**
     * Gets bmukk_rating
     *
     * @return string
     */
    public function getBmukkRating()
    {
        return $this->container['bmukk_rating'];
    }

    /**
     * Sets bmukk_rating
     *
     * @param string $bmukk_rating The video's rating from the Austrian Board of Media Classification (Bundesministerium für Unterricht, Kunst und Kultur).
     *
     * @return $this
     */
    public function setBmukkRating($bmukk_rating)
    {
        $allowedValues = $this->getBmukkRatingAllowableValues();
        if (!is_null($bmukk_rating) && !in_array($bmukk_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'bmukk_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['bmukk_rating'] = $bmukk_rating;

        return $this;
    }

    /**
     * Gets catv_rating
     *
     * @return string
     */
    public function getCatvRating()
    {
        return $this->container['catv_rating'];
    }

    /**
     * Sets catv_rating
     *
     * @param string $catv_rating Rating system for Canadian TV - Canadian TV Classification System The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian English-language broadcasts. For more information, see the Canadian Broadcast Standards Council website.
     *
     * @return $this
     */
    public function setCatvRating($catv_rating)
    {
        $allowedValues = $this->getCatvRatingAllowableValues();
        if (!is_null($catv_rating) && !in_array($catv_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'catv_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['catv_rating'] = $catv_rating;

        return $this;
    }

    /**
     * Gets catvfr_rating
     *
     * @return string
     */
    public function getCatvfrRating()
    {
        return $this->container['catvfr_rating'];
    }

    /**
     * Sets catvfr_rating
     *
     * @param string $catvfr_rating The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian French-language broadcasts. For more information, see the Canadian Broadcast Standards Council website.
     *
     * @return $this
     */
    public function setCatvfrRating($catvfr_rating)
    {
        $allowedValues = $this->getCatvfrRatingAllowableValues();
        if (!is_null($catvfr_rating) && !in_array($catvfr_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'catvfr_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['catvfr_rating'] = $catvfr_rating;

        return $this;
    }

    /**
     * Gets cbfc_rating
     *
     * @return string
     */
    public function getCbfcRating()
    {
        return $this->container['cbfc_rating'];
    }

    /**
     * Sets cbfc_rating
     *
     * @param string $cbfc_rating The video's Central Board of Film Certification (CBFC - India) rating.
     *
     * @return $this
     */
    public function setCbfcRating($cbfc_rating)
    {
        $allowedValues = $this->getCbfcRatingAllowableValues();
        if (!is_null($cbfc_rating) && !in_array($cbfc_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'cbfc_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['cbfc_rating'] = $cbfc_rating;

        return $this;
    }

    /**
     * Gets ccc_rating
     *
     * @return string
     */
    public function getCccRating()
    {
        return $this->container['ccc_rating'];
    }

    /**
     * Sets ccc_rating
     *
     * @param string $ccc_rating The video's Consejo de Calificación Cinematográfica (Chile) rating.
     *
     * @return $this
     */
    public function setCccRating($ccc_rating)
    {
        $allowedValues = $this->getCccRatingAllowableValues();
        if (!is_null($ccc_rating) && !in_array($ccc_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'ccc_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['ccc_rating'] = $ccc_rating;

        return $this;
    }

    /**
     * Gets cce_rating
     *
     * @return string
     */
    public function getCceRating()
    {
        return $this->container['cce_rating'];
    }

    /**
     * Sets cce_rating
     *
     * @param string $cce_rating The video's rating from Portugal's Comissão de Classificação de Espect´culos.
     *
     * @return $this
     */
    public function setCceRating($cce_rating)
    {
        $allowedValues = $this->getCceRatingAllowableValues();
        if (!is_null($cce_rating) && !in_array($cce_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'cce_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['cce_rating'] = $cce_rating;

        return $this;
    }

    /**
     * Gets chfilm_rating
     *
     * @return string
     */
    public function getChfilmRating()
    {
        return $this->container['chfilm_rating'];
    }

    /**
     * Sets chfilm_rating
     *
     * @param string $chfilm_rating The video's rating in Switzerland.
     *
     * @return $this
     */
    public function setChfilmRating($chfilm_rating)
    {
        $allowedValues = $this->getChfilmRatingAllowableValues();
        if (!is_null($chfilm_rating) && !in_array($chfilm_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'chfilm_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['chfilm_rating'] = $chfilm_rating;

        return $this;
    }

    /**
     * Gets chvrs_rating
     *
     * @return string
     */
    public function getChvrsRating()
    {
        return $this->container['chvrs_rating'];
    }

    /**
     * Sets chvrs_rating
     *
     * @param string $chvrs_rating The video's Canadian Home Video Rating System (CHVRS) rating.
     *
     * @return $this
     */
    public function setChvrsRating($chvrs_rating)
    {
        $allowedValues = $this->getChvrsRatingAllowableValues();
        if (!is_null($chvrs_rating) && !in_array($chvrs_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'chvrs_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['chvrs_rating'] = $chvrs_rating;

        return $this;
    }

    /**
     * Gets cicf_rating
     *
     * @return string
     */
    public function getCicfRating()
    {
        return $this->container['cicf_rating'];
    }

    /**
     * Sets cicf_rating
     *
     * @param string $cicf_rating The video's rating from the Commission de Contrôle des Films (Belgium).
     *
     * @return $this
     */
    public function setCicfRating($cicf_rating)
    {
        $allowedValues = $this->getCicfRatingAllowableValues();
        if (!is_null($cicf_rating) && !in_array($cicf_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'cicf_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['cicf_rating'] = $cicf_rating;

        return $this;
    }

    /**
     * Gets cna_rating
     *
     * @return string
     */
    public function getCnaRating()
    {
        return $this->container['cna_rating'];
    }

    /**
     * Sets cna_rating
     *
     * @param string $cna_rating The video's rating from Romania's CONSILIUL NATIONAL AL AUDIOVIZUALULUI (CNA).
     *
     * @return $this
     */
    public function setCnaRating($cna_rating)
    {
        $allowedValues = $this->getCnaRatingAllowableValues();
        if (!is_null($cna_rating) && !in_array($cna_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'cna_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['cna_rating'] = $cna_rating;

        return $this;
    }

    /**
     * Gets cnc_rating
     *
     * @return string
     */
    public function getCncRating()
    {
        return $this->container['cnc_rating'];
    }

    /**
     * Sets cnc_rating
     *
     * @param string $cnc_rating Rating system in France - Commission de classification cinematographique
     *
     * @return $this
     */
    public function setCncRating($cnc_rating)
    {
        $allowedValues = $this->getCncRatingAllowableValues();
        if (!is_null($cnc_rating) && !in_array($cnc_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'cnc_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['cnc_rating'] = $cnc_rating;

        return $this;
    }

    /**
     * Gets csa_rating
     *
     * @return string
     */
    public function getCsaRating()
    {
        return $this->container['csa_rating'];
    }

    /**
     * Sets csa_rating
     *
     * @param string $csa_rating The video's rating from France's Conseil supérieur de l?audiovisuel, which rates broadcast content.
     *
     * @return $this
     */
    public function setCsaRating($csa_rating)
    {
        $allowedValues = $this->getCsaRatingAllowableValues();
        if (!is_null($csa_rating) && !in_array($csa_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'csa_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['csa_rating'] = $csa_rating;

        return $this;
    }

    /**
     * Gets cscf_rating
     *
     * @return string
     */
    public function getCscfRating()
    {
        return $this->container['cscf_rating'];
    }

    /**
     * Sets cscf_rating
     *
     * @param string $cscf_rating The video's rating from Luxembourg's Commission de surveillance de la classification des films (CSCF).
     *
     * @return $this
     */
    public function setCscfRating($cscf_rating)
    {
        $allowedValues = $this->getCscfRatingAllowableValues();
        if (!is_null($cscf_rating) && !in_array($cscf_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'cscf_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['cscf_rating'] = $cscf_rating;

        return $this;
    }

    /**
     * Gets czfilm_rating
     *
     * @return string
     */
    public function getCzfilmRating()
    {
        return $this->container['czfilm_rating'];
    }

    /**
     * Sets czfilm_rating
     *
     * @param string $czfilm_rating The video's rating in the Czech Republic.
     *
     * @return $this
     */
    public function setCzfilmRating($czfilm_rating)
    {
        $allowedValues = $this->getCzfilmRatingAllowableValues();
        if (!is_null($czfilm_rating) && !in_array($czfilm_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'czfilm_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['czfilm_rating'] = $czfilm_rating;

        return $this;
    }

    /**
     * Gets djctq_rating
     *
     * @return string
     */
    public function getDjctqRating()
    {
        return $this->container['djctq_rating'];
    }

    /**
     * Sets djctq_rating
     *
     * @param string $djctq_rating The video's Departamento de Justiça, Classificação, Qualificação e Títulos (DJCQT - Brazil) rating.
     *
     * @return $this
     */
    public function setDjctqRating($djctq_rating)
    {
        $allowedValues = $this->getDjctqRatingAllowableValues();
        if (!is_null($djctq_rating) && !in_array($djctq_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'djctq_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['djctq_rating'] = $djctq_rating;

        return $this;
    }

    /**
     * Gets djctq_rating_reasons
     *
     * @return string[]
     */
    public function getDjctqRatingReasons()
    {
        return $this->container['djctq_rating_reasons'];
    }

    /**
     * Sets djctq_rating_reasons
     *
     * @param string[] $djctq_rating_reasons Reasons that explain why the video received its DJCQT (Brazil) rating.
     *
     * @return $this
     */
    public function setDjctqRatingReasons($djctq_rating_reasons)
    {
        $allowedValues = $this->getDjctqRatingReasonsAllowableValues();
        if (!is_null($djctq_rating_reasons) && array_diff($djctq_rating_reasons, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'djctq_rating_reasons', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['djctq_rating_reasons'] = $djctq_rating_reasons;

        return $this;
    }

    /**
     * Gets ecbmct_rating
     *
     * @return string
     */
    public function getEcbmctRating()
    {
        return $this->container['ecbmct_rating'];
    }

    /**
     * Sets ecbmct_rating
     *
     * @param string $ecbmct_rating Rating system in Turkey - Evaluation and Classification Board of the Ministry of Culture and Tourism
     *
     * @return $this
     */
    public function setEcbmctRating($ecbmct_rating)
    {
        $allowedValues = $this->getEcbmctRatingAllowableValues();
        if (!is_null($ecbmct_rating) && !in_array($ecbmct_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'ecbmct_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['ecbmct_rating'] = $ecbmct_rating;

        return $this;
    }

    /**
     * Gets eefilm_rating
     *
     * @return string
     */
    public function getEefilmRating()
    {
        return $this->container['eefilm_rating'];
    }

    /**
     * Sets eefilm_rating
     *
     * @param string $eefilm_rating The video's rating in Estonia.
     *
     * @return $this
     */
    public function setEefilmRating($eefilm_rating)
    {
        $allowedValues = $this->getEefilmRatingAllowableValues();
        if (!is_null($eefilm_rating) && !in_array($eefilm_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'eefilm_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['eefilm_rating'] = $eefilm_rating;

        return $this;
    }

    /**
     * Gets egfilm_rating
     *
     * @return string
     */
    public function getEgfilmRating()
    {
        return $this->container['egfilm_rating'];
    }

    /**
     * Sets egfilm_rating
     *
     * @param string $egfilm_rating The video's rating in Egypt.
     *
     * @return $this
     */
    public function setEgfilmRating($egfilm_rating)
    {
        $allowedValues = $this->getEgfilmRatingAllowableValues();
        if (!is_null($egfilm_rating) && !in_array($egfilm_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'egfilm_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['egfilm_rating'] = $egfilm_rating;

        return $this;
    }

    /**
     * Gets eirin_rating
     *
     * @return string
     */
    public function getEirinRating()
    {
        return $this->container['eirin_rating'];
    }

    /**
     * Sets eirin_rating
     *
     * @param string $eirin_rating The video's Eirin (映倫) rating. Eirin is the Japanese rating system.
     *
     * @return $this
     */
    public function setEirinRating($eirin_rating)
    {
        $allowedValues = $this->getEirinRatingAllowableValues();
        if (!is_null($eirin_rating) && !in_array($eirin_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'eirin_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['eirin_rating'] = $eirin_rating;

        return $this;
    }

    /**
     * Gets fcbm_rating
     *
     * @return string
     */
    public function getFcbmRating()
    {
        return $this->container['fcbm_rating'];
    }

    /**
     * Sets fcbm_rating
     *
     * @param string $fcbm_rating The video's rating from Malaysia's Film Censorship Board.
     *
     * @return $this
     */
    public function setFcbmRating($fcbm_rating)
    {
        $allowedValues = $this->getFcbmRatingAllowableValues();
        if (!is_null($fcbm_rating) && !in_array($fcbm_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'fcbm_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['fcbm_rating'] = $fcbm_rating;

        return $this;
    }

    /**
     * Gets fco_rating
     *
     * @return string
     */
    public function getFcoRating()
    {
        return $this->container['fco_rating'];
    }

    /**
     * Sets fco_rating
     *
     * @param string $fco_rating The video's rating from Hong Kong's Office for Film, Newspaper and Article Administration.
     *
     * @return $this
     */
    public function setFcoRating($fco_rating)
    {
        $allowedValues = $this->getFcoRatingAllowableValues();
        if (!is_null($fco_rating) && !in_array($fco_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'fco_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['fco_rating'] = $fco_rating;

        return $this;
    }

    /**
     * Gets fmoc_rating
     *
     * @return string
     */
    public function getFmocRating()
    {
        return $this->container['fmoc_rating'];
    }

    /**
     * Sets fmoc_rating
     *
     * @param string $fmoc_rating This property has been deprecated. Use the contentDetails.contentRating.cncRating instead.
     *
     * @return $this
     */
    public function setFmocRating($fmoc_rating)
    {
        $allowedValues = $this->getFmocRatingAllowableValues();
        if (!is_null($fmoc_rating) && !in_array($fmoc_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'fmoc_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['fmoc_rating'] = $fmoc_rating;

        return $this;
    }

    /**
     * Gets fpb_rating
     *
     * @return string
     */
    public function getFpbRating()
    {
        return $this->container['fpb_rating'];
    }

    /**
     * Sets fpb_rating
     *
     * @param string $fpb_rating The video's rating from South Africa's Film and Publication Board.
     *
     * @return $this
     */
    public function setFpbRating($fpb_rating)
    {
        $allowedValues = $this->getFpbRatingAllowableValues();
        if (!is_null($fpb_rating) && !in_array($fpb_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'fpb_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['fpb_rating'] = $fpb_rating;

        return $this;
    }

    /**
     * Gets fpb_rating_reasons
     *
     * @return string[]
     */
    public function getFpbRatingReasons()
    {
        return $this->container['fpb_rating_reasons'];
    }

    /**
     * Sets fpb_rating_reasons
     *
     * @param string[] $fpb_rating_reasons Reasons that explain why the video received its FPB (South Africa) rating.
     *
     * @return $this
     */
    public function setFpbRatingReasons($fpb_rating_reasons)
    {
        $allowedValues = $this->getFpbRatingReasonsAllowableValues();
        if (!is_null($fpb_rating_reasons) && array_diff($fpb_rating_reasons, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'fpb_rating_reasons', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['fpb_rating_reasons'] = $fpb_rating_reasons;

        return $this;
    }

    /**
     * Gets fsk_rating
     *
     * @return string
     */
    public function getFskRating()
    {
        return $this->container['fsk_rating'];
    }

    /**
     * Sets fsk_rating
     *
     * @param string $fsk_rating The video's Freiwillige Selbstkontrolle der Filmwirtschaft (FSK - Germany) rating.
     *
     * @return $this
     */
    public function setFskRating($fsk_rating)
    {
        $allowedValues = $this->getFskRatingAllowableValues();
        if (!is_null($fsk_rating) && !in_array($fsk_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'fsk_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['fsk_rating'] = $fsk_rating;

        return $this;
    }

    /**
     * Gets grfilm_rating
     *
     * @return string
     */
    public function getGrfilmRating()
    {
        return $this->container['grfilm_rating'];
    }

    /**
     * Sets grfilm_rating
     *
     * @param string $grfilm_rating The video's rating in Greece.
     *
     * @return $this
     */
    public function setGrfilmRating($grfilm_rating)
    {
        $allowedValues = $this->getGrfilmRatingAllowableValues();
        if (!is_null($grfilm_rating) && !in_array($grfilm_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'grfilm_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['grfilm_rating'] = $grfilm_rating;

        return $this;
    }

    /**
     * Gets icaa_rating
     *
     * @return string
     */
    public function getIcaaRating()
    {
        return $this->container['icaa_rating'];
    }

    /**
     * Sets icaa_rating
     *
     * @param string $icaa_rating The video's Instituto de la Cinematografía y de las Artes Audiovisuales (ICAA - Spain) rating.
     *
     * @return $this
     */
    public function setIcaaRating($icaa_rating)
    {
        $allowedValues = $this->getIcaaRatingAllowableValues();
        if (!is_null($icaa_rating) && !in_array($icaa_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'icaa_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['icaa_rating'] = $icaa_rating;

        return $this;
    }

    /**
     * Gets ifco_rating
     *
     * @return string
     */
    public function getIfcoRating()
    {
        return $this->container['ifco_rating'];
    }

    /**
     * Sets ifco_rating
     *
     * @param string $ifco_rating The video's Irish Film Classification Office (IFCO - Ireland) rating. See the IFCO website for more information.
     *
     * @return $this
     */
    public function setIfcoRating($ifco_rating)
    {
        $allowedValues = $this->getIfcoRatingAllowableValues();
        if (!is_null($ifco_rating) && !in_array($ifco_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'ifco_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['ifco_rating'] = $ifco_rating;

        return $this;
    }

    /**
     * Gets ilfilm_rating
     *
     * @return string
     */
    public function getIlfilmRating()
    {
        return $this->container['ilfilm_rating'];
    }

    /**
     * Sets ilfilm_rating
     *
     * @param string $ilfilm_rating The video's rating in Israel.
     *
     * @return $this
     */
    public function setIlfilmRating($ilfilm_rating)
    {
        $allowedValues = $this->getIlfilmRatingAllowableValues();
        if (!is_null($ilfilm_rating) && !in_array($ilfilm_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'ilfilm_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['ilfilm_rating'] = $ilfilm_rating;

        return $this;
    }

    /**
     * Gets incaa_rating
     *
     * @return string
     */
    public function getIncaaRating()
    {
        return $this->container['incaa_rating'];
    }

    /**
     * Sets incaa_rating
     *
     * @param string $incaa_rating The video's INCAA (Instituto Nacional de Cine y Artes Audiovisuales - Argentina) rating.
     *
     * @return $this
     */
    public function setIncaaRating($incaa_rating)
    {
        $allowedValues = $this->getIncaaRatingAllowableValues();
        if (!is_null($incaa_rating) && !in_array($incaa_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'incaa_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['incaa_rating'] = $incaa_rating;

        return $this;
    }

    /**
     * Gets kfcb_rating
     *
     * @return string
     */
    public function getKfcbRating()
    {
        return $this->container['kfcb_rating'];
    }

    /**
     * Sets kfcb_rating
     *
     * @param string $kfcb_rating The video's rating from the Kenya Film Classification Board.
     *
     * @return $this
     */
    public function setKfcbRating($kfcb_rating)
    {
        $allowedValues = $this->getKfcbRatingAllowableValues();
        if (!is_null($kfcb_rating) && !in_array($kfcb_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'kfcb_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['kfcb_rating'] = $kfcb_rating;

        return $this;
    }

    /**
     * Gets kijkwijzer_rating
     *
     * @return string
     */
    public function getKijkwijzerRating()
    {
        return $this->container['kijkwijzer_rating'];
    }

    /**
     * Sets kijkwijzer_rating
     *
     * @param string $kijkwijzer_rating voor de Classificatie van Audiovisuele Media (Netherlands).
     *
     * @return $this
     */
    public function setKijkwijzerRating($kijkwijzer_rating)
    {
        $allowedValues = $this->getKijkwijzerRatingAllowableValues();
        if (!is_null($kijkwijzer_rating) && !in_array($kijkwijzer_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'kijkwijzer_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['kijkwijzer_rating'] = $kijkwijzer_rating;

        return $this;
    }

    /**
     * Gets kmrb_rating
     *
     * @return string
     */
    public function getKmrbRating()
    {
        return $this->container['kmrb_rating'];
    }

    /**
     * Sets kmrb_rating
     *
     * @param string $kmrb_rating The video's Korea Media Rating Board (영상물등급위원회) rating. The KMRB rates videos in South Korea.
     *
     * @return $this
     */
    public function setKmrbRating($kmrb_rating)
    {
        $allowedValues = $this->getKmrbRatingAllowableValues();
        if (!is_null($kmrb_rating) && !in_array($kmrb_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'kmrb_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['kmrb_rating'] = $kmrb_rating;

        return $this;
    }

    /**
     * Gets lsf_rating
     *
     * @return string
     */
    public function getLsfRating()
    {
        return $this->container['lsf_rating'];
    }

    /**
     * Sets lsf_rating
     *
     * @param string $lsf_rating The video's rating from Indonesia's Lembaga Sensor Film.
     *
     * @return $this
     */
    public function setLsfRating($lsf_rating)
    {
        $allowedValues = $this->getLsfRatingAllowableValues();
        if (!is_null($lsf_rating) && !in_array($lsf_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'lsf_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['lsf_rating'] = $lsf_rating;

        return $this;
    }

    /**
     * Gets mccaa_rating
     *
     * @return string
     */
    public function getMccaaRating()
    {
        return $this->container['mccaa_rating'];
    }

    /**
     * Sets mccaa_rating
     *
     * @param string $mccaa_rating The video's rating from Malta's Film Age-Classification Board.
     *
     * @return $this
     */
    public function setMccaaRating($mccaa_rating)
    {
        $allowedValues = $this->getMccaaRatingAllowableValues();
        if (!is_null($mccaa_rating) && !in_array($mccaa_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'mccaa_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['mccaa_rating'] = $mccaa_rating;

        return $this;
    }

    /**
     * Gets mccyp_rating
     *
     * @return string
     */
    public function getMccypRating()
    {
        return $this->container['mccyp_rating'];
    }

    /**
     * Sets mccyp_rating
     *
     * @param string $mccyp_rating The video's rating from the Danish Film Institute's (Det Danske Filminstitut) Media Council for Children and Young People.
     *
     * @return $this
     */
    public function setMccypRating($mccyp_rating)
    {
        $allowedValues = $this->getMccypRatingAllowableValues();
        if (!is_null($mccyp_rating) && !in_array($mccyp_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'mccyp_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['mccyp_rating'] = $mccyp_rating;

        return $this;
    }

    /**
     * Gets mcst_rating
     *
     * @return string
     */
    public function getMcstRating()
    {
        return $this->container['mcst_rating'];
    }

    /**
     * Sets mcst_rating
     *
     * @param string $mcst_rating The video's rating system for Vietnam - MCST
     *
     * @return $this
     */
    public function setMcstRating($mcst_rating)
    {
        $allowedValues = $this->getMcstRatingAllowableValues();
        if (!is_null($mcst_rating) && !in_array($mcst_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'mcst_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['mcst_rating'] = $mcst_rating;

        return $this;
    }

    /**
     * Gets mda_rating
     *
     * @return string
     */
    public function getMdaRating()
    {
        return $this->container['mda_rating'];
    }

    /**
     * Sets mda_rating
     *
     * @param string $mda_rating The video's rating from Singapore's Media Development Authority (MDA) and, specifically, it's Board of Film Censors (BFC).
     *
     * @return $this
     */
    public function setMdaRating($mda_rating)
    {
        $allowedValues = $this->getMdaRatingAllowableValues();
        if (!is_null($mda_rating) && !in_array($mda_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'mda_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['mda_rating'] = $mda_rating;

        return $this;
    }

    /**
     * Gets medietilsynet_rating
     *
     * @return string
     */
    public function getMedietilsynetRating()
    {
        return $this->container['medietilsynet_rating'];
    }

    /**
     * Sets medietilsynet_rating
     *
     * @param string $medietilsynet_rating The video's rating from Medietilsynet, the Norwegian Media Authority.
     *
     * @return $this
     */
    public function setMedietilsynetRating($medietilsynet_rating)
    {
        $allowedValues = $this->getMedietilsynetRatingAllowableValues();
        if (!is_null($medietilsynet_rating) && !in_array($medietilsynet_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'medietilsynet_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['medietilsynet_rating'] = $medietilsynet_rating;

        return $this;
    }

    /**
     * Gets meku_rating
     *
     * @return string
     */
    public function getMekuRating()
    {
        return $this->container['meku_rating'];
    }

    /**
     * Sets meku_rating
     *
     * @param string $meku_rating The video's rating from Finland's Kansallinen Audiovisuaalinen Instituutti (National Audiovisual Institute).
     *
     * @return $this
     */
    public function setMekuRating($meku_rating)
    {
        $allowedValues = $this->getMekuRatingAllowableValues();
        if (!is_null($meku_rating) && !in_array($meku_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'meku_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['meku_rating'] = $meku_rating;

        return $this;
    }

    /**
     * Gets mena_mpaa_rating
     *
     * @return string
     */
    public function getMenaMpaaRating()
    {
        return $this->container['mena_mpaa_rating'];
    }

    /**
     * Sets mena_mpaa_rating
     *
     * @param string $mena_mpaa_rating The rating system for MENA countries, a clone of MPAA. It is needed to
     *
     * @return $this
     */
    public function setMenaMpaaRating($mena_mpaa_rating)
    {
        $allowedValues = $this->getMenaMpaaRatingAllowableValues();
        if (!is_null($mena_mpaa_rating) && !in_array($mena_mpaa_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'mena_mpaa_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['mena_mpaa_rating'] = $mena_mpaa_rating;

        return $this;
    }

    /**
     * Gets mibac_rating
     *
     * @return string
     */
    public function getMibacRating()
    {
        return $this->container['mibac_rating'];
    }

    /**
     * Sets mibac_rating
     *
     * @param string $mibac_rating The video's rating from the Ministero dei Beni e delle Attività Culturali e del Turismo (Italy).
     *
     * @return $this
     */
    public function setMibacRating($mibac_rating)
    {
        $allowedValues = $this->getMibacRatingAllowableValues();
        if (!is_null($mibac_rating) && !in_array($mibac_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'mibac_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['mibac_rating'] = $mibac_rating;

        return $this;
    }

    /**
     * Gets moc_rating
     *
     * @return string
     */
    public function getMocRating()
    {
        return $this->container['moc_rating'];
    }

    /**
     * Sets moc_rating
     *
     * @param string $moc_rating The video's Ministerio de Cultura (Colombia) rating.
     *
     * @return $this
     */
    public function setMocRating($moc_rating)
    {
        $allowedValues = $this->getMocRatingAllowableValues();
        if (!is_null($moc_rating) && !in_array($moc_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'moc_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['moc_rating'] = $moc_rating;

        return $this;
    }

    /**
     * Gets moctw_rating
     *
     * @return string
     */
    public function getMoctwRating()
    {
        return $this->container['moctw_rating'];
    }

    /**
     * Sets moctw_rating
     *
     * @param string $moctw_rating The video's rating from Taiwan's Ministry of Culture (文化部).
     *
     * @return $this
     */
    public function setMoctwRating($moctw_rating)
    {
        $allowedValues = $this->getMoctwRatingAllowableValues();
        if (!is_null($moctw_rating) && !in_array($moctw_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'moctw_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['moctw_rating'] = $moctw_rating;

        return $this;
    }

    /**
     * Gets mpaa_rating
     *
     * @return string
     */
    public function getMpaaRating()
    {
        return $this->container['mpaa_rating'];
    }

    /**
     * Sets mpaa_rating
     *
     * @param string $mpaa_rating The video's Motion Picture Association of America (MPAA) rating.
     *
     * @return $this
     */
    public function setMpaaRating($mpaa_rating)
    {
        $allowedValues = $this->getMpaaRatingAllowableValues();
        if (!is_null($mpaa_rating) && !in_array($mpaa_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'mpaa_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['mpaa_rating'] = $mpaa_rating;

        return $this;
    }

    /**
     * Gets mpaat_rating
     *
     * @return string
     */
    public function getMpaatRating()
    {
        return $this->container['mpaat_rating'];
    }

    /**
     * Sets mpaat_rating
     *
     * @param string $mpaat_rating The rating system for trailer, DVD, and Ad in the US. See http://movielabs.com/md/ratings/v2.3/html/US_MPAAT_Ratings.html.
     *
     * @return $this
     */
    public function setMpaatRating($mpaat_rating)
    {
        $allowedValues = $this->getMpaatRatingAllowableValues();
        if (!is_null($mpaat_rating) && !in_array($mpaat_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'mpaat_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['mpaat_rating'] = $mpaat_rating;

        return $this;
    }

    /**
     * Gets mtrcb_rating
     *
     * @return string
     */
    public function getMtrcbRating()
    {
        return $this->container['mtrcb_rating'];
    }

    /**
     * Sets mtrcb_rating
     *
     * @param string $mtrcb_rating The video's rating from the Movie and Television Review and Classification Board (Philippines).
     *
     * @return $this
     */
    public function setMtrcbRating($mtrcb_rating)
    {
        $allowedValues = $this->getMtrcbRatingAllowableValues();
        if (!is_null($mtrcb_rating) && !in_array($mtrcb_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'mtrcb_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['mtrcb_rating'] = $mtrcb_rating;

        return $this;
    }

    /**
     * Gets nbc_rating
     *
     * @return string
     */
    public function getNbcRating()
    {
        return $this->container['nbc_rating'];
    }

    /**
     * Sets nbc_rating
     *
     * @param string $nbc_rating The video's rating from the Maldives National Bureau of Classification.
     *
     * @return $this
     */
    public function setNbcRating($nbc_rating)
    {
        $allowedValues = $this->getNbcRatingAllowableValues();
        if (!is_null($nbc_rating) && !in_array($nbc_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'nbc_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['nbc_rating'] = $nbc_rating;

        return $this;
    }

    /**
     * Gets nbcpl_rating
     *
     * @return string
     */
    public function getNbcplRating()
    {
        return $this->container['nbcpl_rating'];
    }

    /**
     * Sets nbcpl_rating
     *
     * @param string $nbcpl_rating The video's rating in Poland.
     *
     * @return $this
     */
    public function setNbcplRating($nbcpl_rating)
    {
        $allowedValues = $this->getNbcplRatingAllowableValues();
        if (!is_null($nbcpl_rating) && !in_array($nbcpl_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'nbcpl_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['nbcpl_rating'] = $nbcpl_rating;

        return $this;
    }

    /**
     * Gets nfrc_rating
     *
     * @return string
     */
    public function getNfrcRating()
    {
        return $this->container['nfrc_rating'];
    }

    /**
     * Sets nfrc_rating
     *
     * @param string $nfrc_rating The video's rating from the Bulgarian National Film Center.
     *
     * @return $this
     */
    public function setNfrcRating($nfrc_rating)
    {
        $allowedValues = $this->getNfrcRatingAllowableValues();
        if (!is_null($nfrc_rating) && !in_array($nfrc_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'nfrc_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['nfrc_rating'] = $nfrc_rating;

        return $this;
    }

    /**
     * Gets nfvcb_rating
     *
     * @return string
     */
    public function getNfvcbRating()
    {
        return $this->container['nfvcb_rating'];
    }

    /**
     * Sets nfvcb_rating
     *
     * @param string $nfvcb_rating The video's rating from Nigeria's National Film and Video Censors Board.
     *
     * @return $this
     */
    public function setNfvcbRating($nfvcb_rating)
    {
        $allowedValues = $this->getNfvcbRatingAllowableValues();
        if (!is_null($nfvcb_rating) && !in_array($nfvcb_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'nfvcb_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['nfvcb_rating'] = $nfvcb_rating;

        return $this;
    }

    /**
     * Gets nkclv_rating
     *
     * @return string
     */
    public function getNkclvRating()
    {
        return $this->container['nkclv_rating'];
    }

    /**
     * Sets nkclv_rating
     *
     * @param string $nkclv_rating The video's rating from the Nacionãlais Kino centrs (National Film Centre of Latvia).
     *
     * @return $this
     */
    public function setNkclvRating($nkclv_rating)
    {
        $allowedValues = $this->getNkclvRatingAllowableValues();
        if (!is_null($nkclv_rating) && !in_array($nkclv_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'nkclv_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['nkclv_rating'] = $nkclv_rating;

        return $this;
    }

    /**
     * Gets oflc_rating
     *
     * @return string
     */
    public function getOflcRating()
    {
        return $this->container['oflc_rating'];
    }

    /**
     * Sets oflc_rating
     *
     * @param string $oflc_rating The video's Office of Film and Literature Classification (OFLC - New Zealand) rating.
     *
     * @return $this
     */
    public function setOflcRating($oflc_rating)
    {
        $allowedValues = $this->getOflcRatingAllowableValues();
        if (!is_null($oflc_rating) && !in_array($oflc_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'oflc_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['oflc_rating'] = $oflc_rating;

        return $this;
    }

    /**
     * Gets pefilm_rating
     *
     * @return string
     */
    public function getPefilmRating()
    {
        return $this->container['pefilm_rating'];
    }

    /**
     * Sets pefilm_rating
     *
     * @param string $pefilm_rating The video's rating in Peru.
     *
     * @return $this
     */
    public function setPefilmRating($pefilm_rating)
    {
        $allowedValues = $this->getPefilmRatingAllowableValues();
        if (!is_null($pefilm_rating) && !in_array($pefilm_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'pefilm_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['pefilm_rating'] = $pefilm_rating;

        return $this;
    }

    /**
     * Gets rcnof_rating
     *
     * @return string
     */
    public function getRcnofRating()
    {
        return $this->container['rcnof_rating'];
    }

    /**
     * Sets rcnof_rating
     *
     * @param string $rcnof_rating The video's rating from the Hungarian Nemzeti Filmiroda, the Rating Committee of the National Office of Film.
     *
     * @return $this
     */
    public function setRcnofRating($rcnof_rating)
    {
        $allowedValues = $this->getRcnofRatingAllowableValues();
        if (!is_null($rcnof_rating) && !in_array($rcnof_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'rcnof_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['rcnof_rating'] = $rcnof_rating;

        return $this;
    }

    /**
     * Gets resorteviolencia_rating
     *
     * @return string
     */
    public function getResorteviolenciaRating()
    {
        return $this->container['resorteviolencia_rating'];
    }

    /**
     * Sets resorteviolencia_rating
     *
     * @param string $resorteviolencia_rating The video's rating in Venezuela.
     *
     * @return $this
     */
    public function setResorteviolenciaRating($resorteviolencia_rating)
    {
        $allowedValues = $this->getResorteviolenciaRatingAllowableValues();
        if (!is_null($resorteviolencia_rating) && !in_array($resorteviolencia_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'resorteviolencia_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['resorteviolencia_rating'] = $resorteviolencia_rating;

        return $this;
    }

    /**
     * Gets rtc_rating
     *
     * @return string
     */
    public function getRtcRating()
    {
        return $this->container['rtc_rating'];
    }

    /**
     * Sets rtc_rating
     *
     * @param string $rtc_rating The video's General Directorate of Radio, Television and Cinematography (Mexico) rating.
     *
     * @return $this
     */
    public function setRtcRating($rtc_rating)
    {
        $allowedValues = $this->getRtcRatingAllowableValues();
        if (!is_null($rtc_rating) && !in_array($rtc_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'rtc_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['rtc_rating'] = $rtc_rating;

        return $this;
    }

    /**
     * Gets rte_rating
     *
     * @return string
     */
    public function getRteRating()
    {
        return $this->container['rte_rating'];
    }

    /**
     * Sets rte_rating
     *
     * @param string $rte_rating The video's rating from Ireland's Raidió Teilifís Éireann.
     *
     * @return $this
     */
    public function setRteRating($rte_rating)
    {
        $allowedValues = $this->getRteRatingAllowableValues();
        if (!is_null($rte_rating) && !in_array($rte_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'rte_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['rte_rating'] = $rte_rating;

        return $this;
    }

    /**
     * Gets russia_rating
     *
     * @return string
     */
    public function getRussiaRating()
    {
        return $this->container['russia_rating'];
    }

    /**
     * Sets russia_rating
     *
     * @param string $russia_rating The video's National Film Registry of the Russian Federation (MKRF - Russia) rating.
     *
     * @return $this
     */
    public function setRussiaRating($russia_rating)
    {
        $allowedValues = $this->getRussiaRatingAllowableValues();
        if (!is_null($russia_rating) && !in_array($russia_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'russia_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['russia_rating'] = $russia_rating;

        return $this;
    }

    /**
     * Gets skfilm_rating
     *
     * @return string
     */
    public function getSkfilmRating()
    {
        return $this->container['skfilm_rating'];
    }

    /**
     * Sets skfilm_rating
     *
     * @param string $skfilm_rating The video's rating in Slovakia.
     *
     * @return $this
     */
    public function setSkfilmRating($skfilm_rating)
    {
        $allowedValues = $this->getSkfilmRatingAllowableValues();
        if (!is_null($skfilm_rating) && !in_array($skfilm_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'skfilm_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['skfilm_rating'] = $skfilm_rating;

        return $this;
    }

    /**
     * Gets smais_rating
     *
     * @return string
     */
    public function getSmaisRating()
    {
        return $this->container['smais_rating'];
    }

    /**
     * Sets smais_rating
     *
     * @param string $smais_rating The video's rating in Iceland.
     *
     * @return $this
     */
    public function setSmaisRating($smais_rating)
    {
        $allowedValues = $this->getSmaisRatingAllowableValues();
        if (!is_null($smais_rating) && !in_array($smais_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'smais_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['smais_rating'] = $smais_rating;

        return $this;
    }

    /**
     * Gets smsa_rating
     *
     * @return string
     */
    public function getSmsaRating()
    {
        return $this->container['smsa_rating'];
    }

    /**
     * Sets smsa_rating
     *
     * @param string $smsa_rating The video's rating from Statens medieråd (Sweden's National Media Council).
     *
     * @return $this
     */
    public function setSmsaRating($smsa_rating)
    {
        $allowedValues = $this->getSmsaRatingAllowableValues();
        if (!is_null($smsa_rating) && !in_array($smsa_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'smsa_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['smsa_rating'] = $smsa_rating;

        return $this;
    }

    /**
     * Gets tvpg_rating
     *
     * @return string
     */
    public function getTvpgRating()
    {
        return $this->container['tvpg_rating'];
    }

    /**
     * Sets tvpg_rating
     *
     * @param string $tvpg_rating The video's TV Parental Guidelines (TVPG) rating.
     *
     * @return $this
     */
    public function setTvpgRating($tvpg_rating)
    {
        $allowedValues = $this->getTvpgRatingAllowableValues();
        if (!is_null($tvpg_rating) && !in_array($tvpg_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'tvpg_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['tvpg_rating'] = $tvpg_rating;

        return $this;
    }

    /**
     * Gets yt_rating
     *
     * @return string
     */
    public function getYtRating()
    {
        return $this->container['yt_rating'];
    }

    /**
     * Sets yt_rating
     *
     * @param string $yt_rating A rating that YouTube uses to identify age-restricted content.
     *
     * @return $this
     */
    public function setYtRating($yt_rating)
    {
        $allowedValues = $this->getYtRatingAllowableValues();
        if (!is_null($yt_rating) && !in_array($yt_rating, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'yt_rating', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['yt_rating'] = $yt_rating;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


